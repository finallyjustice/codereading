From 7db9789d94fcbd487ac4655596c7295e6a492606 Mon Sep 17 00:00:00 2001
From: Dongli Zhang <dongli.zhang@oracle.com>
Date: Mon, 23 Dec 2019 10:12:43 -0800
Subject: [PATCH 1/1] xen-4.4.4-222.0.9-comment

xen-4.4.4-222.0.9

Signed-off-by: Dongli Zhang <dongli.zhang@oracle.com>
---
 xen/drivers/passthrough/vtd/dmar.c | 38 ++++++++++++++++++++++++++++++
 1 file changed, 38 insertions(+)

diff --git a/xen/drivers/passthrough/vtd/dmar.c b/xen/drivers/passthrough/vtd/dmar.c
index ad2d3e6d5e..6bae025674 100644
--- a/xen/drivers/passthrough/vtd/dmar.c
+++ b/xen/drivers/passthrough/vtd/dmar.c
@@ -50,6 +50,10 @@ static struct acpi_table_header *__read_mostly dmar_table;
 static int __read_mostly dmar_flags;
 static u64 __read_mostly igd_drhd_address;
 
+/*
+ * called by:
+ *   - drivers/passthrough/vtd/dmar.c|381| <<acpi_parse_dev_scope>> dmar_scope_add_buses(scope, sec_bus, sub_bus);
+ */
 static void __init dmar_scope_add_buses(struct dmar_scope *scope, u16 sec_bus,
                                         u16 sub_bus)
 {
@@ -233,13 +237,25 @@ struct acpi_drhd_unit *acpi_find_matched_drhd_unit(const struct pci_dev *pdev)
         if ( drhd->segment != pdev->seg )
             continue;
 
+	/* devices owned by this unit:
+	 *   - drivers/passthrough/vtd/dmar.c|435| <<acpi_parse_dev_scope>> scope->devices[didx++] = PCI_BDF(bus, path->dev, path->fn);
+	 */
         for (i = 0; i < drhd->scope.devices_cnt; i++)
             if ( drhd->scope.devices[i] == PCI_BDF2(bus, devfn) )
                 return drhd;
 
+	/*
+	 * buses是buses owned by this unit, 只在以下设置:
+	 *   - drivers/passthrough/vtd/dmar.c|61| <<dmar_scope_add_buses>> set_bit(sec_bus++, scope->buses);
+	 */
         if ( test_bit(bus, drhd->scope.buses) )
             return drhd;
 
+	/*
+	 * 设置include_all的几处地方 (注释说Only allow one INCLUDE_ALL):
+	 *   -  drivers/passthrough/vtd/dmar.h|66| <<global>> u8 include_all:1;
+	 *   -  drivers/passthrough/vtd/dmar.c|481| <<acpi_parse_one_drhd>> dmaru->include_all = drhd->flags & ACPI_DMAR_INCLUDE_ALL;
+	 */
         if ( drhd->include_all )
             include_all = drhd;
     }
@@ -316,6 +332,12 @@ static int __init scope_device_count(const void *start, const void *end)
 }
 
 
+/*
+ * called by:
+ *   - drivers/passthrough/vtd/dmar.c|506| <<acpi_parse_one_drhd>> ret = acpi_parse_dev_scope(dev_scope_start, dev_scope_end,
+ *   - drivers/passthrough/vtd/dmar.c|646| <<acpi_parse_one_rmrr>> ret = acpi_parse_dev_scope(dev_scope_start, dev_scope_end,
+ *   - drivers/passthrough/vtd/dmar.c|741| <<acpi_parse_one_atsr>> ret = acpi_parse_dev_scope(dev_scope_start, dev_scope_end,
+ */
 static int __init acpi_parse_dev_scope(
     const void *start, const void *end, struct dmar_scope *scope,
     int type, u16 seg)
@@ -342,6 +364,7 @@ static int __init acpi_parse_dev_scope(
     while ( start < end )
     {
         acpi_scope = start;
+        /* path的类型是const struct acpi_dmar_pci_path */
         path = (const void *)(acpi_scope + 1);
         depth = (acpi_scope->length - sizeof(*acpi_scope)) / sizeof(*path);
         bus = acpi_scope->bus;
@@ -456,6 +479,10 @@ static int __init acpi_dmar_check_length(
     return -EINVAL;
 }
 
+/*
+ * called by:
+ *   - drivers/passthrough/vtd/dmar.c|847| <<acpi_parse_dmar>> ret = acpi_parse_one_drhd(entry_header);
+ */
 static int __init
 acpi_parse_one_drhd(struct acpi_dmar_header *header)
 {
@@ -491,6 +518,17 @@ acpi_parse_one_drhd(struct acpi_dmar_header *header)
 
     dev_scope_start = (void *)(drhd + 1);
     dev_scope_end = ((void *)drhd) + header->length;
+    /*
+     * References:
+     * - https://zhuanlan.zhihu.com/p/51110851
+     * - https://terenceli.github.io/%E6%8A%80%E6%9C%AF/2019/08/10/iommu-driver-analysis
+     * - VT-d manual: BIOS Considerations
+     * 
+     * IOMMU最核心的是DRHD,可以用来remapping.
+     *
+     * DRHD的信息是由ACPI来表示的.最终DRHD的scope下面会有: 1. endpoint devices, 2.
+     * bridge.
+     */
     ret = acpi_parse_dev_scope(dev_scope_start, dev_scope_end,
                                &dmaru->scope, DMAR_TYPE, drhd->segment);
 
-- 
2.20.1 (Apple Git-117)

