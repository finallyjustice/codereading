From f24b739fae086aedfe4fb23974a48cbcebd3497e Mon Sep 17 00:00:00 2001
From: Dongli Zhang <dongli.zhang0129@gmail.com>
Date: Tue, 21 Oct 2025 10:41:07 -0700
Subject: [PATCH 1/1] linux-v6.17

Signed-off-by: Dongli Zhang <dongli.zhang0129@gmail.com>
---
 arch/x86/include/asm/kvm_host.h        |  7 +++++
 arch/x86/kvm/svm/nested.c              |  5 +++
 arch/x86/kvm/x86.c                     | 43 ++++++++++++++++++++++++++
 drivers/net/virtio_net.c               | 15 +++++++++
 drivers/target/target_core_device.c    | 13 ++++++++
 drivers/target/target_core_sbc.c       | 14 +++++++++
 drivers/target/target_core_transport.c |  8 +++++
 7 files changed, 105 insertions(+)

diff --git a/arch/x86/include/asm/kvm_host.h b/arch/x86/include/asm/kvm_host.h
index f19a76d3c..2c6113216 100644
--- a/arch/x86/include/asm/kvm_host.h
+++ b/arch/x86/include/asm/kvm_host.h
@@ -1420,6 +1420,13 @@ struct kvm_arch {
 	u64 last_tsc_nsec;
 	u64 last_tsc_write;
 	u32 last_tsc_khz;
+	/*
+	 * 在以下使用kvm_arch->last_tsc_offset:
+	 *   - arch/x86/kvm/x86.c|2686| <<__kvm_synchronize_tsc>> kvm->arch.last_tsc_offset = offset;
+	 *   - arch/x86/kvm/x86.c|5802| <<kvm_arch_tsc_set_attr>> matched = (vcpu->arch.virtual_tsc_khz &&
+	 *                                   kvm->arch.last_tsc_khz == vcpu->arch.virtual_tsc_khz &&
+	 *                                   kvm->arch.last_tsc_offset == offset)
+	 */
 	u64 last_tsc_offset;
 	u64 cur_tsc_nsec;
 	u64 cur_tsc_write;
diff --git a/arch/x86/kvm/svm/nested.c b/arch/x86/kvm/svm/nested.c
index b7fd2e869..d180a757c 100644
--- a/arch/x86/kvm/svm/nested.c
+++ b/arch/x86/kvm/svm/nested.c
@@ -1264,6 +1264,11 @@ int nested_svm_vmexit(struct vcpu_svm *svm)
 	 * Un-inhibit the AVIC right away, so that other vCPUs can start
 	 * to benefit from it right away.
 	 */
+	/*
+	 * 在以下使用__kvm_vcpu_update_apicv():
+	 *   - arch/x86/kvm/svm/nested.c|1268| <<nested_svm_vmexit>> __kvm_vcpu_update_apicv(vcpu);
+	 *   - arch/x86/kvm/x86.c|10558| <<kvm_vcpu_update_apicv>> __kvm_vcpu_update_apicv(vcpu);
+	 */
 	if (kvm_apicv_activated(vcpu->kvm))
 		__kvm_vcpu_update_apicv(vcpu);
 
diff --git a/arch/x86/kvm/x86.c b/arch/x86/kvm/x86.c
index 706b6fd56..0c371098b 100644
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@ -2398,6 +2398,15 @@ static void kvm_get_time_scale(uint64_t scaled_hz, uint64_t base_hz,
 static atomic_t kvm_guest_has_master_clock = ATOMIC_INIT(0);
 #endif
 
+/*
+ * 在以下使用percpu的cpu_tsc_khz:
+ *   - arch/x86/kvm/x86.c|2401| <<global>> static DEFINE_PER_CPU(unsigned long , cpu_tsc_khz);
+ *   - arch/x86/kvm/x86.c|3094| <<get_cpu_tsc_khz>> return __this_cpu_read(cpu_tsc_khz);
+ *   - arch/x86/kvm/x86.c|3108| <<__get_kvmclock>> (static_cpu_has(X86_FEATURE_CONSTANT_TSC) || __this_cpu_read(cpu_tsc_khz))) {
+ *   - arch/x86/kvm/x86.c|9335| <<kvmclock_cpu_down_prep>> __this_cpu_write(cpu_tsc_khz, 0);
+ *   - arch/x86/kvm/x86.c|9352| <<tsc_khz_changed>> __this_cpu_write(cpu_tsc_khz, khz);
+ *   - arch/x86/kvm/x86.c|9371| <<kvm_hyperv_tsc_notifier>> per_cpu(cpu_tsc_khz, cpu) = tsc_khz;
+ */
 static DEFINE_PER_CPU(unsigned long, cpu_tsc_khz);
 static unsigned long max_tsc_khz;
 
@@ -2496,6 +2505,10 @@ static inline bool gtod_is_based_on_tsc(int mode)
 }
 #endif
 
+/*
+ * 在以下使用kvm_track_tsc_matching():
+ *   - arch/x86/kvm/x86.c|2716| <<__kvm_synchronize_tsc>> kvm_track_tsc_matching(vcpu, !matched);
+ */
 static void kvm_track_tsc_matching(struct kvm_vcpu *vcpu, bool new_generation)
 {
 #ifdef CONFIG_X86_64
@@ -2654,6 +2667,11 @@ static inline bool kvm_check_tsc_unstable(void)
  * offset for the vcpu and tracks the TSC matching generation that the vcpu
  * participates in.
  */
+/*
+ * 在以下使用__kvm_synchronize_tsc():
+ *   - arch/x86/kvm/x86.c|2783| <<kvm_synchronize_tsc>> __kvm_synchronize_tsc(vcpu, offset, data, ns, matched, !!user_value);
+ *   - arch/x86/kvm/x86.c|5807| <<kvm_arch_tsc_set_attr>> __kvm_synchronize_tsc(vcpu, offset, tsc, ns, matched, true);
+ */
 static void __kvm_synchronize_tsc(struct kvm_vcpu *vcpu, u64 offset, u64 tsc,
 				  u64 ns, bool matched, bool user_set_tsc)
 {
@@ -3003,6 +3021,13 @@ static bool kvm_get_walltime_and_clockread(struct timespec64 *ts,
  *
  */
 
+/*
+ * 在以下使用pvclock_update_vm_gtod_copy():
+ *   - arch/x86/kvm/x86.c|3095| <<kvm_update_masterclock>> pvclock_update_vm_gtod_copy(kvm);
+ *   - arch/x86/kvm/x86.c|6914| <<kvm_vm_ioctl_set_clock>> pvclock_update_vm_gtod_copy(kvm);
+ *   - arch/x86/kvm/x86.c|9399| <<kvm_hyperv_tsc_notifier>> pvclock_update_vm_gtod_copy(kvm);
+ *   - arch/x86/kvm/x86.c|12745| <<kvm_arch_init_vm>> pvclock_update_vm_gtod_copy(kvm);
+ */
 static void pvclock_update_vm_gtod_copy(struct kvm *kvm)
 {
 #ifdef CONFIG_X86_64
@@ -3070,6 +3095,10 @@ static void kvm_end_pvclock_update(struct kvm *kvm)
 		kvm_clear_request(KVM_REQ_MCLOCK_INPROGRESS, vcpu);
 }
 
+/*
+ * 处理KVM_REQ_MASTERCLOCK_UPDATE:
+ *   - arch/x86/kvm/x86.c|10698| <<vcpu_enter_guest>> kvm_update_masterclock(vcpu->kvm);
+ */
 static void kvm_update_masterclock(struct kvm *kvm)
 {
 	kvm_hv_request_tsc_page_update(kvm);
@@ -3094,6 +3123,10 @@ static unsigned long get_cpu_tsc_khz(void)
 		return __this_cpu_read(cpu_tsc_khz);
 }
 
+/*
+ * 在以下使用__get_kvmclock():
+ *   - arch/x86/kvm/x86.c|3149| <<get_kvmclock>> __get_kvmclock(kvm, data);
+ */
 /* Called within read_seqcount_begin/retry for kvm->pvclock_sc.  */
 static void __get_kvmclock(struct kvm *kvm, struct kvm_clock_data *data)
 {
@@ -10465,6 +10498,11 @@ void kvm_make_scan_ioapic_request(struct kvm *kvm)
 	kvm_make_all_cpus_request(kvm, KVM_REQ_SCAN_IOAPIC);
 }
 
+/*
+ * 在以下使用__kvm_vcpu_update_apicv():
+ *   - arch/x86/kvm/svm/nested.c|1268| <<nested_svm_vmexit>> __kvm_vcpu_update_apicv(vcpu);
+ *   - arch/x86/kvm/x86.c|10558| <<kvm_vcpu_update_apicv>> __kvm_vcpu_update_apicv(vcpu);
+ */
 void __kvm_vcpu_update_apicv(struct kvm_vcpu *vcpu)
 {
 	struct kvm_lapic *apic = vcpu->arch.apic;
@@ -10522,6 +10560,11 @@ static void kvm_vcpu_update_apicv(struct kvm_vcpu *vcpu)
 	    kvm_x86_ops.allow_apicv_in_x2apic_without_x2apic_virtualization)
 		kvm_inhibit_apic_access_page(vcpu);
 
+	/*
+	 * 在以下使用__kvm_vcpu_update_apicv():
+	 *   - arch/x86/kvm/svm/nested.c|1268| <<nested_svm_vmexit>> __kvm_vcpu_update_apicv(vcpu);
+	 *   - arch/x86/kvm/x86.c|10558| <<kvm_vcpu_update_apicv>> __kvm_vcpu_update_apicv(vcpu);
+	 */
 	__kvm_vcpu_update_apicv(vcpu);
 }
 
diff --git a/drivers/net/virtio_net.c b/drivers/net/virtio_net.c
index 975bdc5da..1a4a74624 100644
--- a/drivers/net/virtio_net.c
+++ b/drivers/net/virtio_net.c
@@ -843,6 +843,11 @@ static struct sk_buff *virtnet_build_skb(void *buf, unsigned int buflen,
 	return skb;
 }
 
+/*
+ * 在以下使用page_to_skb():
+ *   - drivers/net/virtio_net.c|2111| <<receive_big>> page_to_skb(vi, rq, page, 0, len, PAGE_SIZE, 0);
+ *   - drivers/net/virtio_net.c|2496| <<receive_mergeable>> head_skb = page_to_skb(vi, rq, page, offset, len, truesize, headroom);
+ */
 /* Called from bottom half context */
 static struct sk_buff *page_to_skb(struct virtnet_info *vi,
 				   struct receive_queue *rq,
@@ -2107,6 +2112,11 @@ static struct sk_buff *receive_big(struct net_device *dev,
 				   struct virtnet_rq_stats *stats)
 {
 	struct page *page = buf;
+	/*
+	 * 在以下使用page_to_skb():
+	 *   - drivers/net/virtio_net.c|2111| <<receive_big>> page_to_skb(vi, rq, page, 0, len, PAGE_SIZE, 0);
+	 *   - drivers/net/virtio_net.c|2496| <<receive_mergeable>> head_skb = page_to_skb(vi, rq, page, offset, len, truesize, headroom);
+	 */
 	struct sk_buff *skb =
 		page_to_skb(vi, rq, page, 0, len, PAGE_SIZE, 0);
 
@@ -2493,6 +2503,11 @@ static struct sk_buff *receive_mergeable(struct net_device *dev,
 		rcu_read_unlock();
 	}
 
+	/*
+	 * 在以下使用page_to_skb():
+	 *   - drivers/net/virtio_net.c|2111| <<receive_big>> page_to_skb(vi, rq, page, 0, len, PAGE_SIZE, 0);
+	 *   - drivers/net/virtio_net.c|2496| <<receive_mergeable>> head_skb = page_to_skb(vi, rq, page, offset, len, truesize, headroom);
+	 */
 	head_skb = page_to_skb(vi, rq, page, offset, len, truesize, headroom);
 	curr_skb = head_skb;
 
diff --git a/drivers/target/target_core_device.c b/drivers/target/target_core_device.c
index 7bb711b24..1cfab675a 100644
--- a/drivers/target/target_core_device.c
+++ b/drivers/target/target_core_device.c
@@ -1105,6 +1105,11 @@ void core_dev_release_virtual_lun0(void)
 /*
  * Common CDB parsing for kernel and user passthrough.
  */
+/*
+ * 在以下使用passthrough_parse_cdb():
+ *   - drivers/target/target_core_pscsi.c|928| <<pscsi_parse_cdb>> return passthrough_parse_cdb(cmd, pscsi_execute_cmd);
+ *   - drivers/target/target_core_user.c|2670| <<tcmu_parse_cdb>> return passthrough_parse_cdb(cmd, tcmu_queue_cmd);
+ */
 sense_reason_t
 passthrough_parse_cdb(struct se_cmd *cmd,
 	sense_reason_t (*exec_cmd)(struct se_cmd *cmd))
@@ -1144,6 +1149,14 @@ passthrough_parse_cdb(struct se_cmd *cmd,
 		if (cdb[0] == PERSISTENT_RESERVE_IN) {
 			cmd->execute_cmd = target_scsi3_emulate_pr_in;
 			size = get_unaligned_be16(&cdb[7]);
+			/*
+			 * 在以下使用target_cmd_size_check():
+			 *   - drivers/target/target_core_device.c|1147| <<passthrough_parse_cdb>> return target_cmd_size_check(cmd, size);
+			 *   - drivers/target/target_core_device.c|1152| <<passthrough_parse_cdb>> return target_cmd_size_check(cmd, size);
+			 *   - drivers/target/target_core_device.c|1161| <<passthrough_parse_cdb>> return target_cmd_size_check(cmd, size);
+			 *   - drivers/target/target_core_device.c|1169| <<passthrough_parse_cdb>> return target_cmd_size_check(cmd, size);
+			 *   - drivers/target/target_core_sbc.c|1067| <<sbc_parse_cdb>> return target_cmd_size_check(cmd, size);
+			 */
 			return target_cmd_size_check(cmd, size);
 		}
 		if (cdb[0] == PERSISTENT_RESERVE_OUT) {
diff --git a/drivers/target/target_core_sbc.c b/drivers/target/target_core_sbc.c
index fe8beb7db..e612a229e 100644
--- a/drivers/target/target_core_sbc.c
+++ b/drivers/target/target_core_sbc.c
@@ -764,6 +764,12 @@ sbc_check_dpofua(struct se_device *dev, struct se_cmd *cmd, unsigned char *cdb)
 	return 0;
 }
 
+/*
+ * 在以下使用sbc_parse_cdb():
+ *   - drivers/target/target_core_file.c|909| <<fd_parse_cdb>> return sbc_parse_cdb(cmd, &fd_exec_cmd_ops);
+ *   - drivers/target/target_core_iblock.c|1162| <<iblock_parse_cdb>> return sbc_parse_cdb(cmd, &iblock_exec_cmd_ops);
+ *   - drivers/target/target_core_rd.c|653| <<rd_parse_cdb>> return sbc_parse_cdb(cmd, &rd_exec_cmd_ops);
+ */
 sense_reason_t
 sbc_parse_cdb(struct se_cmd *cmd, struct exec_cmd_ops *ops)
 {
@@ -1064,6 +1070,14 @@ sbc_parse_cdb(struct se_cmd *cmd, struct exec_cmd_ops *ops)
 			size = sbc_get_size(cmd, sectors);
 	}
 
+	/*
+	 * 在以下使用target_cmd_size_check():
+	 *   - drivers/target/target_core_device.c|1147| <<passthrough_parse_cdb>> return target_cmd_size_check(cmd, size);
+	 *   - drivers/target/target_core_device.c|1152| <<passthrough_parse_cdb>> return target_cmd_size_check(cmd, size);
+	 *   - drivers/target/target_core_device.c|1161| <<passthrough_parse_cdb>> return target_cmd_size_check(cmd, size);
+	 *   - drivers/target/target_core_device.c|1169| <<passthrough_parse_cdb>> return target_cmd_size_check(cmd, size);
+	 *   - drivers/target/target_core_sbc.c|1067| <<sbc_parse_cdb>> return target_cmd_size_check(cmd, size);
+	 */
 	return target_cmd_size_check(cmd, size);
 }
 EXPORT_SYMBOL(sbc_parse_cdb);
diff --git a/drivers/target/target_core_transport.c b/drivers/target/target_core_transport.c
index 0a76bdfe5..6cb80901d 100644
--- a/drivers/target/target_core_transport.c
+++ b/drivers/target/target_core_transport.c
@@ -1382,6 +1382,14 @@ target_check_max_data_sg_nents(struct se_cmd *cmd, struct se_device *dev,
  *
  * Return: TCM_NO_SENSE
  */
+/*
+ * 在以下使用target_cmd_size_check():
+ *   - drivers/target/target_core_device.c|1147| <<passthrough_parse_cdb>> return target_cmd_size_check(cmd, size);
+ *   - drivers/target/target_core_device.c|1152| <<passthrough_parse_cdb>> return target_cmd_size_check(cmd, size);
+ *   - drivers/target/target_core_device.c|1161| <<passthrough_parse_cdb>> return target_cmd_size_check(cmd, size);
+ *   - drivers/target/target_core_device.c|1169| <<passthrough_parse_cdb>> return target_cmd_size_check(cmd, size);
+ *   - drivers/target/target_core_sbc.c|1067| <<sbc_parse_cdb>> return target_cmd_size_check(cmd, size);
+ */
 sense_reason_t
 target_cmd_size_check(struct se_cmd *cmd, unsigned int size)
 {
-- 
2.39.5 (Apple Git-154)

