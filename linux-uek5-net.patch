From b9e61aeec5b71fa345dbc7d9d5009e717a01500a Mon Sep 17 00:00:00 2001
From: Dongli Zhang <dongli.zhang0129@gmail.com>
Date: Tue, 11 Feb 2020 13:55:47 -0800
Subject: [PATCH 1/1] linux uek5 net

v4.14.35-1902.300.5

Signed-off-by: Dongli Zhang <dongli.zhang0129@gmail.com>
---
 drivers/net/tun.c         | 5 +++++
 include/linux/ptr_ring.h  | 9 +++++++++
 include/linux/skb_array.h | 4 ++++
 3 files changed, 18 insertions(+)

diff --git a/drivers/net/tun.c b/drivers/net/tun.c
index e0baea2dfd3c..0066b1b7dce3 100644
--- a/drivers/net/tun.c
+++ b/drivers/net/tun.c
@@ -2828,6 +2828,11 @@ static int tun_device_event(struct notifier_block *unused,
 	return NOTIFY_DONE;
 }
 
+/*
+ * 在以下使用tun_notifier_block:
+ *   - drivers/net/tun.c|2853| <<tun_init>> ret = register_netdevice_notifier(&tun_notifier_block);
+ *   - drivers/net/tun.c|2873| <<tun_cleanup>> unregister_netdevice_notifier(&tun_notifier_block);
+ */
 static struct notifier_block tun_notifier_block __read_mostly = {
 	.notifier_call	= tun_device_event,
 };
diff --git a/include/linux/ptr_ring.h b/include/linux/ptr_ring.h
index e8b12b79a0de..cc21fe394325 100644
--- a/include/linux/ptr_ring.h
+++ b/include/linux/ptr_ring.h
@@ -537,6 +537,11 @@ static inline void ptr_ring_unconsume(struct ptr_ring *r, void **batch, int n,
 	spin_unlock_irqrestore(&r->consumer_lock, flags);
 }
 
+/*
+ * called by:
+ *   - include/linux/ptr_ring.h|583| <<ptr_ring_resize>> old = __ptr_ring_swap_queue(r, queue, size, gfp, destroy);
+ *   - include/linux/ptr_ring.h|621| <<ptr_ring_resize_multiple>> queues[i] = __ptr_ring_swap_queue(rings[i], queues[i],
+ */
 static inline void **__ptr_ring_swap_queue(struct ptr_ring *r, void **queue,
 					   int size, gfp_t gfp,
 					   void (*destroy)(void *))
@@ -567,6 +572,10 @@ static inline void **__ptr_ring_swap_queue(struct ptr_ring *r, void **queue,
  * In particular if you consume ring in interrupt or BH context, you must
  * disable interrupts/BH when doing so.
  */
+/*
+ * called by:
+ *   - include/linux/skb_array.h|192| <<skb_array_resize>> return ptr_ring_resize(&a->ring, size, gfp, __skb_array_destroy_skb);
+ */
 static inline int ptr_ring_resize(struct ptr_ring *r, int size, gfp_t gfp,
 				  void (*destroy)(void *))
 {
diff --git a/include/linux/skb_array.h b/include/linux/skb_array.h
index 8621ffdeecbf..793fd3eb9145 100644
--- a/include/linux/skb_array.h
+++ b/include/linux/skb_array.h
@@ -187,6 +187,10 @@ static inline void skb_array_unconsume(struct skb_array *a,
 	ptr_ring_unconsume(&a->ring, (void **)skbs, n, __skb_array_destroy_skb);
 }
 
+/*
+ * called by:
+ *   - drivers/net/tun.c|668| <<tun_attach>> skb_array_resize(&tfile->tx_array, dev->tx_queue_len, GFP_KERNEL)) {
+ */
 static inline int skb_array_resize(struct skb_array *a, int size, gfp_t gfp)
 {
 	return ptr_ring_resize(&a->ring, size, gfp, __skb_array_destroy_skb);
-- 
2.17.1

