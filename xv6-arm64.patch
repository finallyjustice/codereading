From b7932b319d42104c3f1cbdd4ff435643aaf161af Mon Sep 17 00:00:00 2001
From: Dongli Zhang <dongli.zhang0129@gmail.com>
Date: Wed, 13 Sep 2023 00:28:05 -0700
Subject: [PATCH 1/1] xv6-arm64

---
 xv6-armv8/entry.S |  8 ++++++++
 xv6-armv8/start.c | 41 +++++++++++++++++++++++++++++++++++++++++
 2 files changed, 49 insertions(+)

diff --git a/xv6-armv8/entry.S b/xv6-armv8/entry.S
index b1b4bd4..9fbe065 100644
--- a/xv6-armv8/entry.S
+++ b/xv6-armv8/entry.S
@@ -9,9 +9,16 @@ _start:
 
 	# initialize stack pointers for svc modes
 	mov     x0, #1     // select SP_EL1
+	# 注释: SPSel, Stack Pointer Select
 	msr     spsel, x0
+	# 指令同步屏障(Instruction Synchronization Barrier, ISB)指令:
+	# 确保所有在ISB指令之后的指令都从指令高速缓存或内存中重新预取.
+	# 它刷新流水线(flush pipeline)和预取缓冲区后才会从指令高速缓存
+	# 或者内存中预取ISB指令之后的指令. ISB指令通常用来保证上下文切换
+	# (如ASID更改,TLB维护操作等)的效果.
 	isb
 
+	# 在kernel.ld
 	adrp    x0, init_stktop
 	mov     sp, x0
 
@@ -23,6 +30,7 @@ _start:
 
 1:
 	CMP     x1, x2
+	# x1 > x2 时成立
 	B.GT    2f
 	STR     x3, [x1]
 	ADD     x1, x1, #0x08
diff --git a/xv6-armv8/start.c b/xv6-armv8/start.c
index fccc309..d52bac1 100644
--- a/xv6-armv8/start.c
+++ b/xv6-armv8/start.c
@@ -56,6 +56,15 @@ uint64 *user_pgtbl = &_user_pgtbl;
 
 extern void * vectors;
 
+/*
+ * called by:
+ *   - start.c|231| <<start>> set_bootpgtbl((uint64)PHY_START, (uint64)PHY_START, INIT_KERN_SZ, 0);
+ *   - start.c|232| <<start>> set_bootpgtbl((uint64)KERNBASE + (uint64)PHY_START, (uint64)PHY_START, INIT_KERN_SZ, 0);
+ *   - start.c|235| <<start>> set_bootpgtbl((uint64)DEVBASE2, (uint64)DEVBASE2, DEV_MEM_SZ, 1);
+ *   - start.c|238| <<start>> set_bootpgtbl((uint64)KERNBASE+(uint64)DEVBASE1, (uint64)DEVBASE1, DEV_MEM_SZ, 1);
+ *   - start.c|239| <<start>> set_bootpgtbl((uint64)KERNBASE+(uint64)DEVBASE2, (uint64)DEVBASE2, DEV_MEM_SZ, 1);
+ *   - start.c|240| <<start>> set_bootpgtbl((uint64)KERNBASE+(uint64)DEVBASE3, (uint64)DEVBASE2, DEV_MEM_SZ, 1);
+ */
 // setup the boot page table: dev_mem whether it is device memory
 void set_bootpgtbl (uint64 virt, uint64 phy, uint len, int dev_mem )
 {
@@ -92,6 +101,10 @@ void set_bootpgtbl (uint64 virt, uint64 phy, uint len, int dev_mem )
     }
 }
 
+/*
+ * called by:
+ *   - start.c|242| <<start>> load_pgtlb (kernel_pgtbl, user_pgtbl);
+ */
 void load_pgtlb (uint64* kern_pgtbl, uint64* user_pgtbl)
 {
     char	arch;
@@ -204,6 +217,34 @@ void clear_bss (void)
     memset(&edata, 0x00, &end-&edata);
 }
 
+/*
+ * starting xv6 for ARMv8...
+ * Implementer: ARM Limited
+ * Current EL: EL1
+ * Flushing TLB and Instr Cache
+ * Setting Memory Attribute Indirection Register (MAIR_EL1)
+ * Setting Vector Base Address Register (VBAR_EL1)
+ * Setting Translation Control Register (TCR_EL1)
+ * Setting Translation Table Base Register 1 (TTBR1_EL1)
+ * Setting Translation Table Base Register 0 (TTBR0_EL1)
+ * Setting System Control Register (SCTLR_EL1)
+ * System Configure Completed...
+ *
+ * clearing BSS section for the main kernel
+ * Starting Kernel
+ *
+ * **************************************************************************
+ * **                                                                      **
+ * **                                                                      **
+ * **                  xv6 on ARMv8-A (64-bit) Architecture                **
+ * **                                                                      **
+ * **                                                                      **
+ * **************************************************************************
+ *
+ * init: Starting Shell
+ * $
+ */
+
 void start (void)
 {
     uint64	l2pgtbl;
-- 
2.34.1

