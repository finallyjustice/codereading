From e9fa98c1375bc634533b4d5191e165515c53a6ab Mon Sep 17 00:00:00 2001
From: Dongli Zhang <dongli.zhang0129@gmail.com>
Date: Mon, 30 Sep 2024 11:26:09 -0700
Subject: [PATCH 1/1] linux v5.15.167

vCPU hotplug and offline

Signed-off-by: Dongli Zhang <dongli.zhang0129@gmail.com>
---
 arch/x86/kernel/smpboot.c     | 51 ++++++++++++++++++++++++
 drivers/acpi/acpi_processor.c | 62 +++++++++++++++++++++++++++++
 drivers/acpi/bus.c            |  4 ++
 drivers/acpi/osl.c            | 70 +++++++++++++++++++++++++++++++++
 drivers/acpi/scan.c           | 73 +++++++++++++++++++++++++++++++++++
 drivers/acpi/utils.c          | 51 ++++++++++++++++++++++++
 6 files changed, 311 insertions(+)

diff --git a/arch/x86/kernel/smpboot.c b/arch/x86/kernel/smpboot.c
index 714f66aa0..431d17028 100644
--- a/arch/x86/kernel/smpboot.c
+++ b/arch/x86/kernel/smpboot.c
@@ -1642,6 +1642,57 @@ int native_cpu_disable(void)
 	return 0;
 }
 
+/*
+ * [0] acpi_hotplug_schedule
+ * [0] acpi_bus_notify
+ * [0] acpi_ev_notify_dispatch
+ * [0] acpi_os_execute_deferred
+ * [0] process_one_work
+ * [0] worker_thread
+ * [0] kthread
+ * [0] ret_from_fork
+ *
+ * [0] acpi_evaluate_ost
+ * [0] acpi_generic_hotplug_event
+ * [0] acpi_device_hotplug
+ * [0] acpi_hotplug_work_fn
+ * [0] process_one_work
+ * [0] worker_thread
+ * [0] kthread
+ * [0] ret_from_fork
+ *
+ * [0] common_cpu_die
+ * [0] takedown_cpu
+ * [0] cpuhp_invoke_callback
+ * [0] __cpuhp_invoke_callback_range
+ * [0] _cpu_down
+ * [0] cpu_device_down
+ * [0] device_offline
+ * [0] acpi_bus_offline
+ * [0] acpi_device_hotplug
+ * [0] acpi_hotplug_work_fn
+ * [0] process_one_work
+ * [0] worker_thread
+ * [0] kthread
+ * [0] ret_from_fork
+ *
+ * [0] acpi_processor_remove
+ * [0] acpi_bus_trim
+ * [0] acpi_device_hotplug
+ * [0] acpi_hotplug_work_fn
+ * [0] process_one_work
+ * [0] worker_thread
+ * [0] kthread
+ * [0] ret_from_fork
+ *
+ * [0] acpi_evaluate_ost
+ * [0] acpi_device_hotplug
+ * [0] acpi_hotplug_work_fn
+ * [0] process_one_work
+ * [0] worker_thread
+ * [0] kthread
+ * [0] ret_from_fork
+ */
 int common_cpu_die(unsigned int cpu)
 {
 	int ret = 0;
diff --git a/drivers/acpi/acpi_processor.c b/drivers/acpi/acpi_processor.c
index 8bd5c4fa9..eb8272856 100644
--- a/drivers/acpi/acpi_processor.c
+++ b/drivers/acpi/acpi_processor.c
@@ -426,8 +426,70 @@ static int acpi_processor_add(struct acpi_device *device,
 	return result;
 }
 
+/*
+ * [0] acpi_hotplug_schedule
+ * [0] acpi_bus_notify
+ * [0] acpi_ev_notify_dispatch
+ * [0] acpi_os_execute_deferred
+ * [0] process_one_work
+ * [0] worker_thread
+ * [0] kthread
+ * [0] ret_from_fork
+ *
+ * [0] acpi_evaluate_ost
+ * [0] acpi_generic_hotplug_event
+ * [0] acpi_device_hotplug
+ * [0] acpi_hotplug_work_fn
+ * [0] process_one_work
+ * [0] worker_thread
+ * [0] kthread
+ * [0] ret_from_fork
+ *
+ * [0] common_cpu_die
+ * [0] takedown_cpu
+ * [0] cpuhp_invoke_callback
+ * [0] __cpuhp_invoke_callback_range
+ * [0] _cpu_down
+ * [0] cpu_device_down
+ * [0] device_offline
+ * [0] acpi_bus_offline
+ * [0] acpi_device_hotplug
+ * [0] acpi_hotplug_work_fn
+ * [0] process_one_work
+ * [0] worker_thread
+ * [0] kthread
+ * [0] ret_from_fork
+ *
+ * [0] acpi_processor_remove
+ * [0] acpi_bus_trim
+ * [0] acpi_device_hotplug
+ * [0] acpi_hotplug_work_fn
+ * [0] process_one_work
+ * [0] worker_thread
+ * [0] kthread
+ * [0] ret_from_fork
+ *
+ * [0] acpi_evaluate_ost
+ * [0] acpi_device_hotplug
+ * [0] acpi_hotplug_work_fn
+ * [0] process_one_work
+ * [0] worker_thread
+ * [0] kthread
+ * [0] ret_from_fork
+ */
+
 #ifdef CONFIG_ACPI_HOTPLUG_CPU
 /* Removal */
+/*
+ * [0] acpi_processor_remove
+ * [0] acpi_bus_trim
+ * [0] acpi_device_hotplug
+ * [0] acpi_hotplug_work_fn
+ * [0] process_one_work
+ * [0] worker_thread
+ * [0] kthread
+ * [0] ret_from_fork
+ */
 static void acpi_processor_remove(struct acpi_device *device)
 {
 	struct acpi_processor *pr;
diff --git a/drivers/acpi/bus.c b/drivers/acpi/bus.c
index 7774b603a..155ab4aaa 100644
--- a/drivers/acpi/bus.c
+++ b/drivers/acpi/bus.c
@@ -435,6 +435,10 @@ static void acpi_bus_osc_negotiate_usb_control(void)
  * ---------------
  * Callback for all 'system-level' device notifications (values 0x00-0x7F).
  */
+/*
+ * 在以下使用acpi_bus_notify():
+ *   - drivers/acpi/bus.c|1296| <<acpi_bus_init>> status = acpi_install_notify_handler(ACPI_ROOT_OBJECT, ACPI_SYSTEM_NOTIFY, &acpi_bus_notify, NULL);
+ */
 static void acpi_bus_notify(acpi_handle handle, u32 type, void *data)
 {
 	struct acpi_device *adev;
diff --git a/drivers/acpi/osl.c b/drivers/acpi/osl.c
index 45c5c0e45..5e6ac9921 100644
--- a/drivers/acpi/osl.c
+++ b/drivers/acpi/osl.c
@@ -1152,6 +1152,10 @@ struct acpi_hp_work {
 	u32 src;
 };
 
+/*
+ * 在以下使用acpi_hotplug_work_fn():
+ *   - drivers/acpi/osl.c|1188| <<acpi_hotplug_schedule>> INIT_WORK(&hpw->work, acpi_hotplug_work_fn);
+ */
 static void acpi_hotplug_work_fn(struct work_struct *work)
 {
 	struct acpi_hp_work *hpw = container_of(work, struct acpi_hp_work, work);
@@ -1161,6 +1165,72 @@ static void acpi_hotplug_work_fn(struct work_struct *work)
 	kfree(hpw);
 }
 
+/*
+ * [0] acpi_hotplug_schedule
+ * [0] acpi_bus_notify
+ * [0] acpi_ev_notify_dispatch
+ * [0] acpi_os_execute_deferred
+ * [0] process_one_work
+ * [0] worker_thread
+ * [0] kthread
+ * [0] ret_from_fork
+ *
+ * [0] acpi_evaluate_ost
+ * [0] acpi_generic_hotplug_event
+ * [0] acpi_device_hotplug
+ * [0] acpi_hotplug_work_fn
+ * [0] process_one_work
+ * [0] worker_thread
+ * [0] kthread
+ * [0] ret_from_fork
+ *
+ * [0] common_cpu_die
+ * [0] takedown_cpu
+ * [0] cpuhp_invoke_callback
+ * [0] __cpuhp_invoke_callback_range
+ * [0] _cpu_down
+ * [0] cpu_device_down
+ * [0] device_offline
+ * [0] acpi_bus_offline
+ * [0] acpi_device_hotplug
+ * [0] acpi_hotplug_work_fn
+ * [0] process_one_work
+ * [0] worker_thread
+ * [0] kthread
+ * [0] ret_from_fork
+ *
+ * [0] acpi_processor_remove
+ * [0] acpi_bus_trim
+ * [0] acpi_device_hotplug
+ * [0] acpi_hotplug_work_fn
+ * [0] process_one_work
+ * [0] worker_thread
+ * [0] kthread
+ * [0] ret_from_fork
+ *
+ * [0] acpi_evaluate_ost
+ * [0] acpi_device_hotplug
+ * [0] acpi_hotplug_work_fn
+ * [0] process_one_work
+ * [0] worker_thread
+ * [0] kthread
+ * [0] ret_from_fork
+ *
+ * ================
+ *
+ * [0] acpi_hotplug_schedule
+ * [0] acpi_bus_notify
+ * [0] acpi_ev_notify_dispatch
+ * [0] acpi_os_execute_deferred
+ * [0] process_one_work
+ * [0] worker_thread
+ * [0] kthread
+ * [0] ret_from_fork
+ *
+ * 在以下使用acpi_hotplug_schedule():
+ *   - drivers/acpi/bus.c|503| <<acpi_bus_notify>> if (ACPI_SUCCESS(acpi_hotplug_schedule(adev, type)))
+ *   - drivers/acpi/device_sysfs.c|388| <<eject_store>> status = acpi_hotplug_schedule(acpi_device, ACPI_OST_EC_OSPM_EJECT);
+ */
 acpi_status acpi_hotplug_schedule(struct acpi_device *adev, u32 src)
 {
 	struct acpi_hp_work *hpw;
diff --git a/drivers/acpi/scan.c b/drivers/acpi/scan.c
index 2393cd993..e6fb55dcd 100644
--- a/drivers/acpi/scan.c
+++ b/drivers/acpi/scan.c
@@ -132,6 +132,13 @@ bool acpi_scan_is_offline(struct acpi_device *adev, bool uevent)
 	return offline;
 }
 
+/*
+ * called by:
+ *   - drivers/acpi/scan.c|218| <<acpi_scan_try_to_offline>> status = acpi_walk_namespace(ACPI_TYPE_ANY, handle, ACPI_UINT32_MAX, NULL, acpi_bus_offline, (void *)false, (void **)&errdev);
+ *   - drivers/acpi/scan.c|226| <<acpi_scan_try_to_offline>> acpi_bus_offline(handle, 0, (void *)false, (void **)&errdev);
+ *   - drivers/acpi/scan.c|230| <<acpi_scan_try_to_offline>> acpi_walk_namespace(ACPI_TYPE_ANY, handle, ACPI_UINT32_MAX, NULL, acpi_bus_offline, (void *)true, (void **)&errdev);
+ *   - drivers/acpi/scan.c|233| <<acpi_scan_try_to_offline>> acpi_bus_offline(handle, 0, (void *)true, (void **)&errdev);
+ */
 static acpi_status acpi_bus_offline(acpi_handle handle, u32 lvl, void *data,
 				    void **ret_p)
 {
@@ -199,6 +206,10 @@ static acpi_status acpi_bus_online(acpi_handle handle, u32 lvl, void *data,
 	return AE_OK;
 }
 
+/*
+ * called by:
+ *   - drivers/acpi/scan.c|265| <<acpi_scan_hot_remove>> int error = acpi_scan_try_to_offline(device);
+ */
 static int acpi_scan_try_to_offline(struct acpi_device *device)
 {
 	acpi_handle handle = device->handle;
@@ -245,6 +256,10 @@ static int acpi_scan_try_to_offline(struct acpi_device *device)
 	return 0;
 }
 
+/*
+ * called by:
+ *   - drivers/acpi/scan.c|381| <<acpi_generic_hotplug_event>> return acpi_scan_hot_remove(adev);
+ */
 static int acpi_scan_hot_remove(struct acpi_device *device)
 {
 	acpi_handle handle = device->handle;
@@ -356,6 +371,10 @@ static int acpi_scan_bus_check(struct acpi_device *adev)
 	return 0;
 }
 
+/*
+ * called by:
+ *   - drivers/acpi/scan.c|409| <<acpi_device_hotplug>> error = acpi_generic_hotplug_event(adev, src);
+ */
 static int acpi_generic_hotplug_event(struct acpi_device *adev, u32 type)
 {
 	switch (type) {
@@ -376,6 +395,60 @@ static int acpi_generic_hotplug_event(struct acpi_device *adev, u32 type)
 	return -EINVAL;
 }
 
+/*
+ * [0] acpi_hotplug_schedule
+ * [0] acpi_bus_notify
+ * [0] acpi_ev_notify_dispatch
+ * [0] acpi_os_execute_deferred
+ * [0] process_one_work
+ * [0] worker_thread
+ * [0] kthread
+ * [0] ret_from_fork
+ *
+ * [0] acpi_evaluate_ost
+ * [0] acpi_generic_hotplug_event
+ * [0] acpi_device_hotplug
+ * [0] acpi_hotplug_work_fn
+ * [0] process_one_work
+ * [0] worker_thread
+ * [0] kthread
+ * [0] ret_from_fork
+ *
+ * [0] common_cpu_die
+ * [0] takedown_cpu
+ * [0] cpuhp_invoke_callback
+ * [0] __cpuhp_invoke_callback_range
+ * [0] _cpu_down
+ * [0] cpu_device_down
+ * [0] device_offline
+ * [0] acpi_bus_offline
+ * [0] acpi_device_hotplug
+ * [0] acpi_hotplug_work_fn
+ * [0] process_one_work
+ * [0] worker_thread
+ * [0] kthread
+ * [0] ret_from_fork
+ *
+ * [0] acpi_processor_remove
+ * [0] acpi_bus_trim
+ * [0] acpi_device_hotplug
+ * [0] acpi_hotplug_work_fn
+ * [0] process_one_work
+ * [0] worker_thread
+ * [0] kthread
+ * [0] ret_from_fork
+ * 
+ * [0] acpi_evaluate_ost
+ * [0] acpi_device_hotplug
+ * [0] acpi_hotplug_work_fn
+ * [0] process_one_work
+ * [0] worker_thread
+ * [0] kthread
+ * [0] ret_from_fork
+ *
+ * called by:
+ *   - drivers/acpi/osl.c|1160| <<acpi_hotplug_work_fn>> acpi_device_hotplug(hpw->adev, hpw->src);
+ */
 void acpi_device_hotplug(struct acpi_device *adev, u32 src)
 {
 	u32 ost_code = ACPI_OST_SC_NON_SPECIFIC_FAILURE;
diff --git a/drivers/acpi/utils.c b/drivers/acpi/utils.c
index d5cedffee..d544de4be 100644
--- a/drivers/acpi/utils.c
+++ b/drivers/acpi/utils.c
@@ -407,6 +407,57 @@ acpi_get_physical_device_location(acpi_handle handle, struct acpi_pld_info **pld
 }
 EXPORT_SYMBOL(acpi_get_physical_device_location);
 
+/*
+ * [0] acpi_hotplug_schedule
+ * [0] acpi_bus_notify
+ * [0] acpi_ev_notify_dispatch
+ * [0] acpi_os_execute_deferred
+ * [0] process_one_work
+ * [0] worker_thread
+ * [0] kthread
+ * [0] ret_from_fork
+ *
+ * [0] acpi_evaluate_ost
+ * [0] acpi_generic_hotplug_event
+ * [0] acpi_device_hotplug
+ * [0] acpi_hotplug_work_fn
+ * [0] process_one_work
+ * [0] worker_thread
+ * [0] kthread
+ * [0] ret_from_fork
+ *
+ * [0] common_cpu_die
+ * [0] takedown_cpu
+ * [0] cpuhp_invoke_callback
+ * [0] __cpuhp_invoke_callback_range
+ * [0] _cpu_down
+ * [0] cpu_device_down
+ * [0] device_offline
+ * [0] acpi_bus_offline
+ * [0] acpi_device_hotplug
+ * [0] acpi_hotplug_work_fn
+ * [0] process_one_work
+ * [0] worker_thread
+ * [0] kthread
+ * [0] ret_from_fork
+ *
+ * [0] acpi_processor_remove
+ * [0] acpi_bus_trim
+ * [0] acpi_device_hotplug
+ * [0] acpi_hotplug_work_fn
+ * [0] process_one_work
+ * [0] worker_thread
+ * [0] kthread
+ * [0] ret_from_fork
+ *
+ * [0] acpi_evaluate_ost
+ * [0] acpi_device_hotplug
+ * [0] acpi_hotplug_work_fn
+ * [0] process_one_work
+ * [0] worker_thread
+ * [0] kthread
+ * [0] ret_from_fork
+ */
 /**
  * acpi_evaluate_ost: Evaluate _OST for hotplug operations
  * @handle: ACPI device handle
-- 
2.39.3 (Apple Git-146)

