From 44dccd5a643232a53713ffe4fbf9abec98a35000 Mon Sep 17 00:00:00 2001
From: Dongli Zhang <dongli.zhang0129@gmail.com>
Date: Mon, 19 Oct 2020 23:46:12 -0700
Subject: [PATCH 1/1] qemu for 5.1.0

Signed-off-by: Dongli Zhang <dongli.zhang0129@gmail.com>
---
 accel/kvm/kvm-all.c       |  4 ++
 linux-headers/linux/kvm.h |  4 ++
 target/i386/kvm.c         | 86 +++++++++++++++++++++++++++++++++++++++
 3 files changed, 94 insertions(+)

diff --git a/accel/kvm/kvm-all.c b/accel/kvm/kvm-all.c
index 63ef6af9..99efba1b 100644
--- a/accel/kvm/kvm-all.c
+++ b/accel/kvm/kvm-all.c
@@ -430,6 +430,10 @@ static int kvm_get_vcpu(KVMState *s, unsigned long vcpu_id)
     return kvm_vm_ioctl(s, KVM_CREATE_VCPU, (void *)vcpu_id);
 }
 
+/*
+ * called by:
+ *   - softmmu/cpus.c|1173| <<qemu_kvm_cpu_thread_fn>> r = kvm_init_vcpu(cpu);
+ */
 int kvm_init_vcpu(CPUState *cpu)
 {
     KVMState *s = kvm_state;
diff --git a/linux-headers/linux/kvm.h b/linux-headers/linux/kvm.h
index a28c3667..0103387b 100644
--- a/linux-headers/linux/kvm.h
+++ b/linux-headers/linux/kvm.h
@@ -1484,6 +1484,10 @@ struct kvm_enc_region {
 
 /* Available with KVM_CAP_NESTED_STATE */
 #define KVM_GET_NESTED_STATE         _IOWR(KVMIO, 0xbe, struct kvm_nested_state)
+/*
+ * 在以下使用KVM_SET_NESTED_STATE:
+ *   - target/i386/kvm.c|3893| <<kvm_put_nested_state>> return kvm_vcpu_ioctl(CPU(cpu), KVM_SET_NESTED_STATE, env->nested_state);
+ */
 #define KVM_SET_NESTED_STATE         _IOW(KVMIO,  0xbf, struct kvm_nested_state)
 
 /* Available with KVM_CAP_MANUAL_DIRTY_LOG_PROTECT_2 */
diff --git a/target/i386/kvm.c b/target/i386/kvm.c
index 6f18d940..9cb4f6ef 100644
--- a/target/i386/kvm.c
+++ b/target/i386/kvm.c
@@ -1456,6 +1456,10 @@ static Error *invtsc_mig_blocker;
 
 #define KVM_MAX_CPUID_ENTRIES  100
 
+/*
+ * called by:
+ *   - accel/kvm/kvm-all.c|471| <<kvm_init_vcpu>> ret = kvm_arch_init_vcpu(cpu);
+ */
 int kvm_arch_init_vcpu(CPUState *cs)
 {
     struct {
@@ -3860,8 +3864,28 @@ static int kvm_get_debugregs(X86CPU *cpu)
     return 0;
 }
 
+/*
+ * (gdb) bt
+ * #0  0x00005574ae6012f6 in kvm_put_nested_state (cpu=0x5574b026d6f0) at /home/zhang/kvm/qemu-5.1.0/target/i386/kvm.c:3865
+ * #1  0x00005574ae60160a in kvm_arch_put_registers (cpu=0x5574b026d6f0, level=2) at /home/zhang/kvm/qemu-5.1.0/target/i386/kvm.c:3951
+ * #2  0x00005574ae480959 in do_kvm_cpu_synchronize_post_reset (cpu=0x5574b026d6f0, arg=...) at /home/zhang/kvm/qemu-5.1.0/accel/kvm/kvm-all.c:2344
+ * #3  0x00005574ae6171ae in process_queued_cpu_work (cpu=0x5574b026d6f0) at cpus-common.c:343
+ * #4  0x00005574ae565357 in qemu_wait_io_event_common (cpu=0x5574b026d6f0) at /home/zhang/kvm/qemu-5.1.0/softmmu/cpus.c:1117
+ * #5  0x00005574ae5654a2 in qemu_wait_io_event (cpu=0x5574b026d6f0) at /home/zhang/kvm/qemu-5.1.0/softmmu/cpus.c:1157
+ * #6  0x00005574ae5655c5 in qemu_kvm_cpu_thread_fn (arg=0x5574b026d6f0) at /home/zhang/kvm/qemu-5.1.0/softmmu/cpus.c:1193
+ * #7  0x00005574aea06301 in qemu_thread_start (args=0x5574b0294560) at util/qemu-thread-posix.c:521
+ * #8  0x00007f7255132ea5 in start_thread () at /lib64/libpthread.so.0
+ * #9  0x00007f7254e5b8cd in clone () at /lib64/libc.so.6
+ *
+ * called by:
+ *   - target/i386/kvm.c|3955| <<kvm_arch_put_registers>> ret = kvm_put_nested_state(x86_cpu);
+ */
 static int kvm_put_nested_state(X86CPU *cpu)
 {
+    /*
+     * CPUX86State:
+     *  -> struct kvm_nested_state *nested_state;
+     */
     CPUX86State *env = &cpu->env;
     int max_nested_state_len = kvm_max_nested_state_length();
 
@@ -3886,6 +3910,62 @@ static int kvm_put_nested_state(X86CPU *cpu)
     }
 
     assert(env->nested_state->size <= max_nested_state_len);
+    /*
+     * 没有nested的前提下到这里的数据.
+     * (gdb) p *env->nested_state
+     * $2 = {
+     *   flags = 0,
+     *   format = 0,
+     *   size = 128,
+     *   hdr = {
+     *     vmx = {
+     *       vmxon_pa = 18446744073709551615,
+     *       vmcs12_pa = 18446744073709551615,
+     *       smm = {
+     *         flags = 0
+     *       },
+     *       flags = 0,
+     *       preemption_timer_deadline = 0
+     *     },
+     *     svm = {
+     *       vmcb_pa = 18446744073709551615
+     *     },
+     *     pad = '\377' <repeats 16 times>, '\000' <repeats 103 times>
+     *   },
+     *   data = {
+     *     vmx = 0x7f718c002090,
+     *     svm = 0x7f718c002090
+     *   }
+     * }
+     *
+     *
+     * 在有nested的前提下.
+     * (gdb) p *env->nested_state
+     * $3 = {
+     *   flags = 0,
+     *   format = 0,
+     *   size = 128,
+     *   hdr = {
+     *     vmx = {
+     *       vmxon_pa = 2946011136, = 0xaf989000
+     *       vmcs12_pa = 18446744073709551615, = 0xffffffffffffffff
+     *       smm = {
+     *         flags = 0
+     *       },
+     *       flags = 0,
+     *       preemption_timer_deadline = 0
+     *     },
+     *     svm = {
+     *       vmcb_pa = 2946011136
+     *     },
+     *     pad = "\000\220\230\257\000\000\000\000\377\377\377\377\377\377\377\377", '\000' <repeats 103 times>
+     *   },
+     *   data = {
+     *     vmx = 0x7fefdc002090,
+     *     svm = 0x7fefdc002090
+     *   }
+     * }
+     */
     return kvm_vcpu_ioctl(CPU(cpu), KVM_SET_NESTED_STATE, env->nested_state);
 }
 
@@ -3934,6 +4014,12 @@ static int kvm_get_nested_state(X86CPU *cpu)
     return ret;
 }
 
+/*
+ * called by:
+ *   - accel/kvm/kvm-all.c|2348| <<do_kvm_cpu_synchronize_post_reset>> kvm_arch_put_registers(cpu, KVM_PUT_RESET_STATE);
+ *   - accel/kvm/kvm-all.c|2359| <<do_kvm_cpu_synchronize_post_init>> kvm_arch_put_registers(cpu, KVM_PUT_FULL_STATE);
+ *   - accel/kvm/kvm-all.c|2452| <<kvm_cpu_exec>> kvm_arch_put_registers(cpu, KVM_PUT_RUNTIME_STATE);
+ */
 int kvm_arch_put_registers(CPUState *cpu, int level)
 {
     X86CPU *x86_cpu = X86_CPU(cpu);
-- 
2.17.1

