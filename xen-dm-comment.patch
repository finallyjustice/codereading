From 8e50a487f09baeec949b361c863ff5f114c69121 Mon Sep 17 00:00:00 2001
From: Dongli Zhang <dongli.zhang0129@gmail.com>
Date: Tue, 18 Sep 2018 10:45:36 +0800
Subject: [PATCH 1/1] xen dm comment

Signed-off-by: Dongli Zhang <dongli.zhang@oracle.com>
---
 tools/libxl/libxl_dm.c   | 22 ++++++++++++++++++++++
 tools/libxl/libxl_exec.c |  1 +
 2 files changed, 23 insertions(+)

diff --git a/tools/libxl/libxl_dm.c b/tools/libxl/libxl_dm.c
index abd31ee..bb2099f 100644
--- a/tools/libxl/libxl_dm.c
+++ b/tools/libxl/libxl_dm.c
@@ -2226,6 +2226,10 @@ static void device_model_spawn_outcome(libxl__egc *egc,
                                        libxl__dm_spawn_state *dmss,
                                        int rc);
 
+/*
+ * called by:
+ *   - domcreate_launch_dm() 两次 为了HVM和PV
+ */
 void libxl__spawn_local_dm(libxl__egc *egc, libxl__dm_spawn_state *dmss)
 {
     /* convenience aliases */
@@ -2254,6 +2258,7 @@ void libxl__spawn_local_dm(libxl__egc *egc, libxl__dm_spawn_state *dmss)
         abort();
     }
 
+    /* dm是qemu的全路径 */
     dm = libxl__domain_device_model(gc, b_info);
     if (!dm) {
         rc = ERROR_FAIL;
@@ -2295,6 +2300,7 @@ void libxl__spawn_local_dm(libxl__egc *egc, libxl__dm_spawn_state *dmss)
         libxl__xs_printf(gc, XBT_NULL, GCSPRINTF("%s/disable_pf", path),
                          "%d", !libxl_defbool_val(b_info->u.hvm.xen_platform_pci));
 
+    /* exec qemu的时候用作stdout fd */
     logfile_w = libxl__create_qemu_logfile(gc, GCSPRINTF("qemu-dm-%s",
                                                          c_info->name));
     if (logfile_w < 0) {
@@ -2354,6 +2360,7 @@ retry_transaction:
         goto out_close;
     if (!rc) { /* inner child */
         setsid();
+	/* 执行qemu */
         libxl__exec(gc, null, logfile_w, logfile_w, dm, args, envs);
     }
 
@@ -2388,6 +2395,10 @@ bool libxl__query_qemu_backend(libxl__gc *gc, uint32_t domid,
     return !!dir;
 }
 
+/*
+ * 用处之一:
+ *   在libxl__spawn_local_dm()中 spawn->confirm_cb = device_model_confirm
+ */
 static void device_model_confirm(libxl__egc *egc, libxl__spawn_state *spawn,
                                  const char *xsdata)
 {
@@ -2525,6 +2536,13 @@ out:
 }
 
 /* Generic function to signal a Qemu instance to exit */
+/*
+ * called by:
+ *   - libxl__destroy_device_model()
+ *   - libxl__destroy_qdisk_backend()
+ *
+ * destroy qemu的函数
+ */
 static int kill_device_model(libxl__gc *gc, const char *xs_path_pid)
 {
     const char *xs_pid;
@@ -2575,12 +2593,16 @@ out:
     return rc;
 }
 
+/*
+ * called by libxl__destroy_domid()
+ */
 int libxl__destroy_device_model(libxl__gc *gc, uint32_t domid)
 {
     char *path = DEVICE_MODEL_XS_PATH(gc, LIBXL_TOOLSTACK_DOMID, domid, "");
     if (!xs_rm(CTX->xsh, XBT_NULL, path))
         LOGD(ERROR, domid, "xs_rm failed for %s", path);
     /* We should try to destroy the device model anyway. */
+    /* 从xenstore的device-model-pid获取qemu的pid */
     return kill_device_model(gc,
                 GCSPRINTF("/local/domain/%d/image/device-model-pid", domid));
 }
diff --git a/tools/libxl/libxl_exec.c b/tools/libxl/libxl_exec.c
index 02e6c91..19c4363 100644
--- a/tools/libxl/libxl_exec.c
+++ b/tools/libxl/libxl_exec.c
@@ -324,6 +324,7 @@ int libxl__spawn_spawn(libxl__egc *egc, libxl__spawn_state *ss)
     }
 
     for (;;) {
+        /* 这里没多久就被kill 了 */
         pid_t got = waitpid(child, &status, 0);
         if (got == -1) {
             assert(errno == EINTR);
-- 
2.7.4

