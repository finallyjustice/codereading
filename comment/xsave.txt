https://www.owalle.com/2021/12/26/all-registers-x86-64/


单指令多数据SIMD和浮点运算指令FP

X86家族经历了几代SIMD和浮点指令,每一代都引入,扩展或重新定义各种各样的指令:

- x87
- MMX
- SSE (SSE2, SSE3, SSE4, SSE4, ...)
- AVX (AVX2, AVX512)
- AMX

--------------------------

x87

X87最初是一个独立的协处理器,有自己的指令集和寄存器,从80486开始,x87指令就经常被植入x86内核本身.
由于其协处理器的历史,x87定义了正常的寄存器(类似于GPR)和控制FPU状态所需的各种特殊寄存器.

ST0到ST7: 8个80位浮点寄存器
FPSW, FPCW, FPTW 7: 控制、状态和标签字寄存器
"数据操作数指针Data operand pointer". 我不知道这个是做什么的,但英特尔SDM规定了它
指令指针Instruction pointer: x87状态机显然持有它自己的当前x87指令的拷贝.
最后一条指令的操作码Last instruction opcode: 与x87操作码不同,并且有它自己的寄存器.

--------------------------

MMX

MMX是Intel在X86芯片上添加SIMD指令的第一次尝试,发布于1997年.
MMX寄存器实际上是x87 STn寄存器的子集.每个64位MMn占用其相应STn的尾数部分.
因此,x86(和x86-64)CPU不能同时执行MMX和x87指令.

MMX定义了MM0到MM7,8个寄存器,另外还有一个新的状态寄存器(MXCSR),以及用于操作它的加载/存储指令对(LDMXCSR和STMXCSR).

--------------------------

SSE and AVX

为了简单起见,我打算把SSE和AVX包成一个部分:它们使用与GPR和x87/MMX相同的子寄存器模式,所以放在一个表中.

AVX-512 (512-bit)    AVX-2 (256-bit)    SSE (128-bit)
    ZMM0                YMM0               XMM0
    ZMM1                YMM1               XMM1
    ZMM2                YMM2               XMM2
    ZMM3                YMM3               XMM3
    ZMM4                YMM4               XMM4
    ZMM5                YMM5               XMM5
    ZMM6                YMM6               XMM6
    ZMM7                YMM7               XMM7
    ZMM8                YMM8               XMM8
    ZMM9                YMM9               XMM9
    ZMM10               YMM10              XMM10
    ZMM11               YMM11              XMM11
    ZMM12               YMM12              XMM12
    ZMM13               YMM13              XMM13
    ZMM14               YMM14              XMM14
    ZMM15               YMM15              XMM15
    ZMM16               YMM16              XMM16
    ZMM17               YMM17              XMM17
    ZMM18               YMM18              XMM18
    ZMM19               YMM19              XMM19
    ZMM20               YMM20              XMM20
    ZMM21               YMM21              XMM21
    ZMM22               YMM22              XMM22
    ZMM23               YMM23              XMM23
    ZMM24               YMM24              XMM24
    ZMM25               YMM25              XMM25
    ZMM26               YMM26              XMM26
    ZMM27               YMM27              XMM27
    ZMM28               YMM28              XMM28
    ZMM29               YMM29              XMM29
    ZMM30               YMM30              XMM30
    ZMM31               YMM31              XMM31

换句话说:

每个ZMMn的低字节部分是YMMn,而每个YMMn的低字节部分是XMMn.
没有直接的寄存器可以只访问YMMn的高字节部分,或者ZMMn的高128位或者256位字部分.

SSE还定义了一个新的状态寄存器MXCSR,它包含的标志与RFLAGS中的算术标志大致平行(与x87状态字中的浮点标志一起).
AVX-512还引入了8个OPMask寄存器,k0到k7.k0是一个特殊的情况,它的行为很像一些RISC ISA上的"零"寄存器:它不能被存储到,而且从它的加载总是产生一个全部为1的位掩码.


https://www.cnblogs.com/taigacon/p/7882216.html

https://zhuanlan.zhihu.com/p/55327037
