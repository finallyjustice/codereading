KVM and Intel VMX.

Intel VMX的VMCS包含几个部分.

1. Guest-state are.

2. Host-state area.

3. VM-execution control fields.

These fields control processir behavior in VM non-root operation. They determine in part the casues of VM exits.

4. VM-exit control fields.

用来指定虚拟机在发生VM Exit时的行为, 如一些寄存器的保存.

5. VM-entry control fields.

用来指定虚拟机在发生VM Entry时的行为, 如一些寄存器的加载, 还有一些虚拟机的事件注入.

6. VM-exit information fields.



VM-execution control fields包含非常多的fields, 有bit也有具体value的配置. bit有以下几组:

- Pin-Based VM-Execution Controls

The pin-based VM-execution controls constitute a 32-bit vector that governs the handling of asynchronous events (e.g., interrupts).

- Processor-Based VM-Execution Controls.

包含 "primary processor-based VM-execution controls"和"secondary processor-based"

The processor-based VM-execution controls constitute two 32-bit vectors that govern the handling of synchronous events, mainly those caused by the execution of specific instructions.



以上那些只是bit的可以由以下的global的管理.

struct vmcs_config {
    int size;
    int order;
    u32 basic_cap;
    u32 revision_id;
    u32 pin_based_exec_ctrl;
    u32 cpu_based_exec_ctrl;
    u32 cpu_based_2nd_exec_ctrl;
    u32 vmexit_ctrl;
    u32 vmentry_ctrl;
    struct nested_vmx_msrs nested;
};

----------------------------------

关于io exiting

新的kernel已经使用CPU_BASED_UNCOND_IO_EXITING(bit 24)了. 以前使用bit 25, 需要配置必要的bitmap. 自从以下的patch后就是unconditional的io trap了.

commit 8eb73e2d410f00d383023fe41c0c25c6195b7389
Author: Quan Xu <quan.xu0@gmail.com>
Date:   Tue Dec 12 16:44:21 2017 +0800

KVM: VMX: drop I/O permission bitmaps

Since KVM removes the only I/O port 0x80 bypass on Intel hosts,
clear CPU_BASED_USE_IO_BITMAPS and set CPU_BASED_UNCOND_IO_EXITING
bit. Then these I/O permission bitmaps are not used at all, so
drop I/O permission bitmaps.

Signed-off-by: Jim Mattson <jmattson@google.com>
Signed-off-by: Radim KrÄmÃ¡Å™ <rkrcmar@redhat.com>
Signed-off-by: Quan Xu <quan.xu0@gmail.com>
Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>


commit d59d51f088014f25c2562de59b9abff4f42a7468
Author: Andrew Honig <ahonig@google.com>
Date:   Fri Dec 1 10:21:09 2017 -0800

KVM: VMX: remove I/O port 0x80 bypass on Intel hosts

This fixes CVE-2017-1000407.

KVM allows guests to directly access I/O port 0x80 on Intel hosts.  If
the guest floods this port with writes it generates exceptions and
instability in the host kernel, leading to a crash.  With this change
guest writes to port 0x80 on Intel will behave the same as they
currently behave on AMD systems.

Prevent the flooding by removing the code that sets port 0x80 as a
passthrough port.  This is essentially the same as upstream patch
99f85a28a78e96d28907fe036e1671a218fee597, except that patch was
for AMD chipsets and this patch is for Intel.

Signed-off-by: Andrew Honig <ahonig@google.com>
Signed-off-by: Jim Mattson <jmattson@google.com>
Fixes: fdef3ad1b386 ("KVM: VMX: Enable io bitmaps to avoid IO port 0x80 VMEXITs")
Cc: <stable@vger.kernel.org>
Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>

diff --git a/arch/x86/kvm/vmx.c b/arch/x86/kvm/vmx.c
index 4704aaf6d19e..2fd9a8cec29a 100644
--- a/arch/x86/kvm/vmx.c
+++ b/arch/x86/kvm/vmx.c
@@ -6755,12 +6755,7 @@ static __init int hardware_setup(void)
        memset(vmx_vmread_bitmap, 0xff, PAGE_SIZE);
        memset(vmx_vmwrite_bitmap, 0xff, PAGE_SIZE);

-       /*
-        * Allow direct access to the PC debug port (it is often used for I/O
-        * delays, but the vmexits simply slow things down).
-        */
        memset(vmx_io_bitmap_a, 0xff, PAGE_SIZE);
-       clear_bit(0x80, vmx_io_bitmap_a);

        memset(vmx_io_bitmap_b, 0xff, PAGE_SIZE);
