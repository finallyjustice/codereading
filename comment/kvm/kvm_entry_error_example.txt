How QEMU and KVM reports error

Here are some examples that how QEMU and KVM report error, by injecting buggy code on purpose.

The KVM is linux-5.19 and QEMU is 7.0.0.

1. To set vmx->emulation_required = true on purpose at line 6911.

6901 static fastpath_t vmx_vcpu_run(struct kvm_vcpu *vcpu)
6902 {
6903         struct vcpu_vmx *vmx = to_vmx(vcpu);
6904         unsigned long cr3, cr4;
6905
6906         /* Record the guest's net vcpu time for enforced NMI injections. */
6907         if (unlikely(!enable_vnmi &&
6908                      vmx->loaded_vmcs->soft_vnmi_blocked))
6909                 vmx->loaded_vmcs->entry_time = ktime_get();
6910
6911         vmx->emulation_required = true;
6912
6913         /*
6914          * Don't enter VMX if guest state is invalid, let the exit handler
6915          * start emulation until we arrive back to a valid state.  Synthesize a
6916          * consistency check VM-Exit due to invalid guest state and bail.
6917          */
6918         if (unlikely(vmx->emulation_required)) {
6919                 vmx->fail = 0;
6920
6921                 vmx->exit_reason.full = EXIT_REASON_INVALID_STATE;
6922                 vmx->exit_reason.failed_vmentry = 1;
6923                 kvm_register_mark_available(vcpu, VCPU_EXREG_EXIT_INFO_1);
6924                 vmx->exit_qualification = ENTRY_FAIL_DEFAULT;
6925                 kvm_register_mark_available(vcpu, VCPU_EXREG_EXIT_INFO_2);
6926                 vmx->exit_intr_info = 0;
6927                 return EXIT_FASTPATH_NONE;
6928         }

The below is from QEMU, while the KVM does not report anything.

KVM internal error. Suberror: 1
extra data[0]: 0x0000000000000001
extra data[1]: 0x62058b65e8ae0f0f
extra data[2]: 0xa30f48c08961f2e5
extra data[3]: 0x0000000080000021
extra data[4]: 0x0000000000000000
extra data[5]: 0x0000000000000000
extra data[6]: 0x0000000000000000
extra data[7]: 0x0000000000000000
emulation failure
RAX=0000000080200000 RBX=ffff880a7a49ad00 RCX=7f00000000000000 RDX=0000000000000000
RSI=0140000000000000 RDI=0000000000000202 RBP=ffffa5c7806a7ef8 RSP=ffffa5c7806a7ed0
R8 =0000000096ecb3df R9 =0000000000000000 R10=0000000000000200 R11=00000000000000be
R12=ffff880a7a49ad00 R13=ffff880a7a49ad00 R14=0000000000000000 R15=0000000000000000
RIP=ffffffff9e0e0bd4 RFL=00000246 [---Z-P-] CPL=0 II=0 A20=1 SMM=0 HLT=0
ES =0000 0000000000000000 ffffffff 00c00000
CS =0010 0000000000000000 ffffffff 00a09b00 DPL=0 CS64 [-RA]
SS =0018 0000000000000000 ffffffff 00c09300 DPL=0 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 0000000000000000 ffffffff 00c00000
GS =0000 ffff880a7fc80000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe000005b000 0000206f 00008b00 DPL=0 TSS64-busy
GDT=     fffffe0000059000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=00007f57ea1a5140 CR3=00000001389b6000 CR4=000006e0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
Code=dc 95 78 00 e8 77 ff ff ff 48 8b 03 a8 08 0f 85 cc 00 00 00 <0f> ae e8 65 8b 05 62 e5 f2 61 89 c0 48 0f a3 05 f8 33 56 01 0f 92 c0 84 c0 0f 84 0e 01 00


2. To return -1 on purpose at line 2022.

2016 int kvm_emulate_wrmsr(struct kvm_vcpu *vcpu)
2017 {
2018         u32 ecx = kvm_rcx_read(vcpu);
2019         u64 data = kvm_read_edx_eax(vcpu);
2020         int r;
2021
2022         return -1;
2023
2024         r = kvm_set_msr_with_filter(vcpu, ecx, data);
2025
2026         if (!r) {
2027                 trace_kvm_msr_write(ecx, data);
2028         } else {
2029                 /* MSR write failed? See if we should ask user space */
2030                 if (kvm_msr_user_space(vcpu, ecx, KVM_EXIT_X86_WRMSR, data,
2031                                        complete_fast_msr_access, r))
2032                         return 0;
2033                 /* Signal all other negative errors to userspace */
2034                 if (r < 0)
2035                         return r;
2036                 trace_kvm_msr_write_ex(ecx, data);
2037         }
2038
2039         return static_call(kvm_x86_complete_emulated_msr)(vcpu, r);
2040 }
2041 EXPORT_SYMBOL_GPL(kvm_emulate_wrmsr);

The below is from QEMU, while the KVM does not report anything.

error: kvm run failed Operation not permitted
RAX=00000000010ab6d8 RBX=ffff8d63bfc95fc0 RCX=0000000000000838 RDX=0000000000000000
RSI=00000000010ab6d8 RDI=0000000000000838 RBP=ffff8d63bfc83f18 RSP=ffff8d63bfc83f10
R8 =0000000096ecb3df R9 =0000000000000005 R10=0000000000000000 R11=0000000000000020
R12=0000000010ab6ca6 R13=0000000000000000 R14=ffff8d63bfc9d0a8 R15=ffff8d63bfc9d0e8
RIP=ffffffffa9070964 RFL=00000046 [---Z-P-] CPL=0 II=0 A20=1 SMM=0 HLT=0
ES =0000 0000000000000000 ffffffff 00c00000
CS =0010 0000000000000000 ffffffff 00a09b00 DPL=0 CS64 [-RA]
SS =0018 0000000000000000 ffffffff 00c09300 DPL=0 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 0000000000000000 ffffffff 00c00000
GS =0000 ffff8d63bfc80000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe000005b000 0000206f 00008b00 DPL=0 TSS64-busy
GDT=     fffffe0000059000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=00005563e1d167e0 CR3=00000001384a6000 CR4=000006e0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
Code=c3 0f 21 f0 5d c3 0f 0b 0f 1f 84 00 00 00 00 00 89 f9 89 f0 <0f> 30 0f 1f 44 00 00 c3 55 48 c1 e2 20 89 f6 48 09 d6 31 d2 48 89 e5 e8 40 bf 39 00 5d c3


3. To set vmx->fail = true at line 6173, in order to trigger dump_vmcs().

6092 static int __vmx_handle_exit(struct kvm_vcpu *vcpu, fastpath_t exit_fastpath)
6093 {
6094         struct vcpu_vmx *vmx = to_vmx(vcpu);
6095         union vmx_exit_reason exit_reason = vmx->exit_reason;
6096         u32 vectoring_info = vmx->idt_vectoring_info;
6097         u16 exit_handler_index;
... ...
... ...
6173         vmx->fail = true;
6174
6175         if (unlikely(vmx->fail)) {
6176                 dump_vmcs(vcpu);
6177                 vcpu->run->exit_reason = KVM_EXIT_FAIL_ENTRY;
6178                 vcpu->run->fail_entry.hardware_entry_failure_reason
6179                         = vmcs_read32(VM_INSTRUCTION_ERROR);
6180                 vcpu->run->fail_entry.cpu = vcpu->arch.last_vmentry_cpu;
6181                 return 0;
6182         }

The below is from QEMU.

KVM: entry failed, hardware error 0x0
RAX=0000000003449da5 RBX=ffff9a1f3fc95fc0 RCX=0000000000000838 RDX=0000000000000000
RSI=0000000003449da5 RDI=0000000000000838 RBP=ffff9a1f3fc83f18 RSP=ffff9a1f3fc83f10
R8 =0000000096ecb3df R9 =ffff9a1f3a49ad00 R10=0000000000000384 R11=000000000000b97f
R12=000000003449d79b R13=0000000000000000 R14=ffff9a1f3fc9d0a8 R15=ffff9a1f3fc9d0e8
RIP=ffffffff90070964 RFL=00000046 [---Z-P-] CPL=0 II=0 A20=1 SMM=0 HLT=0
ES =0000 0000000000000000 ffffffff 00c00000
CS =0010 0000000000000000 ffffffff 00a09b00 DPL=0 CS64 [-RA]
SS =0018 0000000000000000 ffffffff 00c09300 DPL=0 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 0000000000000000 ffffffff 00c00000
GS =0000 ffff9a1f3fc80000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe000005b000 0000206f 00008b00 DPL=0 TSS64-busy
GDT=     fffffe0000059000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=00007f4ae22fc5b0 CR3=00000001383cc000 CR4=000006e0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
Code=c3 0f 21 f0 5d c3 0f 0b 0f 1f 84 00 00 00 00 00 89 f9 89 f0 <0f> 30 0f 1f 44 00 00 c3 55 48 c1 e2 20 89 f6 48 09 d6 31 d2 48 89 e5 e8 40 bf 39 00 5d c3

The below is from KVM.

[   73.970956] VMCS 00000000c50fc773, last attempted VM-entry on CPU 3
[   73.971449] *** Guest State ***
[   73.971676] CR0: actual=0x0000000080050033, shadow=0x0000000080050033, gh_mask=fffffffffffffff7
[   73.972241] CR4: actual=0x00000000000026e0, shadow=0x00000000000006e0, gh_mask=fffffffffffff871
[   73.972808] CR3 = 0x00000001383cc000
[   73.973123] PDPTR0 = 0x0000030000000000  PDPTR1 = 0x0000022000000000
[   73.973771] PDPTR2 = 0x0000022000000000  PDPTR3 = 0x0000000000000000
[   73.974267] RSP = 0xffff9a1f3fc83f10  RIP = 0xffffffff90070964
[   73.974650] RFLAGS=0x00000046         DR7 = 0x0000000000000400
[   73.975037] Sysenter RSP=fffffe000005a200 CS:RIP=0010:ffffffff90a04810
[   73.975472] CS:   sel=0x0010, attr=0x0a09b, limit=0xffffffff, base=0x0000000000000000
[   73.975979] DS:   sel=0x0000, attr=0x1c000, limit=0xffffffff, base=0x0000000000000000
[   73.976504] SS:   sel=0x0018, attr=0x0c093, limit=0xffffffff, base=0x0000000000000000
[   73.977015] ES:   sel=0x0000, attr=0x1c000, limit=0xffffffff, base=0x0000000000000000
[   73.977531] FS:   sel=0x0000, attr=0x1c000, limit=0xffffffff, base=0x0000000000000000
[   73.978043] GS:   sel=0x0000, attr=0x1c000, limit=0xffffffff, base=0xffff9a1f3fc80000
[   73.978559] GDTR:                           limit=0x0000007f, base=0xfffffe0000059000
[   73.979067] LDTR: sel=0x0000, attr=0x1c000, limit=0xffffffff, base=0x0000000000000000
[   73.979579] IDTR:                           limit=0x00000fff, base=0xfffffe0000000000
[   73.980086] TR:   sel=0x0040, attr=0x0008b, limit=0x0000206f, base=0xfffffe000005b000
[   73.980595] EFER= 0x0000000000000d01 (effective)
[   73.980900] PAT = 0x0407050600070106
[   73.981144] DebugCtl = 0x0000000000000000  DebugExceptions = 0x0000000000000000
[   73.981625] Interruptibility = 00000000  ActivityState = 00000000
[   73.982028] InterruptStatus = 0000
[   73.982343] *** Host State ***
[   73.982638] RIP = 0xffffffffaefc36a3  RSP = 0xffffaf17c0b8bd40
[   73.983057] CS=0010 SS=0018 DS=0000 ES=0000 FS=0000 GS=0000 TR=0040
[   73.983491] FSBase=00007faeb0ded700 GSBase=ffff90da1fcc0000 TRBase=fffffe00000b4000
[   73.983984] GDTBase=fffffe00000b2000 IDTBase=fffffe0000000000
[   73.984375] CR0=0000000080050033 CR3=000000010a644003 CR4=0000000000372ee0
[   73.984827] Sysenter RSP=fffffe00000b4000 CS:RIP=0010:ffffffffaf0016b0
[   73.985266] PAT = 0x0407050600070106
[   73.985503] *** Control State ***
[   73.985720] PinBased=000000ff CPUBased=b5a06dfa SecondaryExec=00032bf2
[   73.986138] EntryControls=000053ff ExitControls=000befff
[   73.986492] ExceptionBitmap=00060042 PFECmask=00000000 PFECmatch=00000000
[   73.986928] VMEntry: intr_info=00000000 errcode=00000000 ilen=00000000
[   73.987366] VMExit: intr_info=00000000 errcode=00000000 ilen=00000002
[   73.987781]         reason=00000020 qualification=0000000000000000
[   73.988185] IDTVectoring: info=00000000 errcode=00000000
[   73.988542] TSC Offset = 0xfffffff193ebfd71
[   73.988816] SVI|RVI = 00|00 TPR Threshold = 0x00
[   73.989125] virt-APIC addr = 0x0000000114057000
[   73.989127] PostedIntrVec = 0xf2
[   73.989355] EPT pointer = 0x0000000103b9205e
[   73.989639] Virtual processor ID = 0x0003
