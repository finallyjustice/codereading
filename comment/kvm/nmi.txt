NONMASKABLE INTERRUPT (NMI)

The nonmaskable interrupt (NMI) can be generated in either of two ways:

- External hardware asserts the NMI pin.

- The processor receives a message on the system bus (Pentium 4, Intel Core Duo,
Intel Core 2, Intel Atom, and Intel Xeon processors) or the APIC serial bus (P6
family and Pentium processors) with a delivery mode NMI.

When the processor receives a NMI from either of these sources, the processor
handles it immediately by calling the NMI handler pointed to by interrupt
vector number 2. The processor also invokes certain hardware conditions to
ensure that no other interrupts, including NMI interrupts, are received until
the NMI handler has completed executing (see Section 6.7.1, "Handling Multiple
NMIs").

Also, when an NMI is received from either of the above sources, it cannot be
masked by the IF flag in the EFLAGS register.

It is possible to issue a maskable hardware interrupt (through the INTR pin) to
vector 2 to invoke the NMI interrupt handler; however, this interrupt will not
truly be an NMI interrupt. A true NMI interrupt that activates the processor's
NMI-handling hardware can only be delivered through one of the mechanisms
listed above.


Handling Multiple NMIs

While an NMI interrupt handler is executing, the processor blocks delivery of
subsequent NMIs until the next execution of the IRET instruction. This blocking
of NMIs prevents nested execution of the NMI handler. It is recommended that
the NMI interrupt handler be accessed through an interrupt gate to disable
maskable hardware interrupts (see Section 6.8.1, "Masking Maskable Hardware
Interrupts").

An execution of the IRET instruction unblocks NMIs even if the instruction
causes a fault. For example, if the IRET instruction executes with EFLAGS.VM =
1 and IOPL of less than 3, a general-protection exception is generated (see
Section 20.2.7, "Sensitive Instructions"). In such a case, NMIs are unmasked
before the exception handler is invoked.
