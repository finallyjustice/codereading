
在pci hot remove的是时候, VM会通过下面写入EJECT. 一旦line 617被调用, 就会trap到QEMU.

607 /**
608  * acpi_evaluate_ej0: Evaluate _EJ0 method for hotplug operations
609  * @handle: ACPI device handle
610  *
611  * Evaluate device's _EJ0 method for hotplug operations.
612  */
613 acpi_status acpi_evaluate_ej0(acpi_handle handle)
614 {
615         acpi_status status;
616
617         status = acpi_execute_simple_method(handle, "_EJ0", 1);
618
619         if (status == AE_NOT_FOUND)
620                 acpi_handle_warn(handle, "No _EJ0 support for device\n");
621         else if (ACPI_FAILURE(status))
622                 acpi_handle_warn(handle, "Eject failed (0x%x)\n", status);
623
624         return status;
625 }

下面是VM的callstack.

[0] virtnet_remove
[0] virtio_dev_remove
[0] device_release_driver_internal
[0] bus_remove_device
[0] device_del
[0] device_unregister
[0] unregister_virtio_device
[0] virtio_pci_remove
[0] pci_device_remove
[0] device_release_driver_internal
[0] pci_stop_bus_device
[0] pci_stop_and_remove_bus_device
[0] disable_slot
[0] acpiphp_disable_and_eject_slot
[0] acpiphp_hotplug_notify
[0] acpi_device_hotplug
[0] acpi_hotplug_work_fn
[0] process_one_work
[0] worker_thread
[0] kthread
[0] ret_from_fork


Workqueue: kacpi_hotplug acpi_hotplug_work_fn
[0] acpi_evaluate_ej0
[0] acpiphp_disable_and_eject_slot
[0] acpiphp_hotplug_notify
[0] acpi_device_hotplug
[0] acpi_hotplug_work_fn
[0] process_one_work
[0] worker_thread
[0] kthread
[0] ret_from_fork


到了QEMU side, 就会handle来自VM的write, 并且用RCU回收object.

(gdb) bt
#0  bus_remove_child (bus=0x5555571e3f58, child=0x5555571e3fe0) at ../hw/core/qdev.c:60
#1  0x0000555555d217b5 in device_unparent (obj=0x5555571e3fe0) at ../hw/core/qdev.c:779
#2  0x0000555555d29795 in object_finalize_child_property (obj=0x5555571dbc20, name=0x5555568469c0 "virtio-backend", opaque=0x5555571e3fe0)
    at ../qom/object.c:1732
#3  0x0000555555d271ac in object_property_del_child (obj=0x5555571dbc20, child=0x5555571e3fe0) at ../qom/object.c:649
#4  0x0000555555d27287 in object_unparent (obj=0x5555571e3fe0) at ../qom/object.c:668
#5  0x0000555555d1ca3a in bus_unparent (obj=0x5555571e3f58) at ../hw/core/bus.c:148
#6  0x0000555555d29795 in object_finalize_child_property (obj=0x5555571dbc20, name=0x555556df1290 "virtio-bus", opaque=0x5555571e3f58) at ../qom/object.c:1732
#7  0x0000555555d271ac in object_property_del_child (obj=0x5555571dbc20, child=0x5555571e3f58) at ../qom/object.c:649
#8  0x0000555555d27287 in object_unparent (obj=0x5555571e3f58) at ../qom/object.c:668
#9  0x0000555555d21786 in device_unparent (obj=0x5555571dbc20) at ../hw/core/qdev.c:776
#10 0x0000555555d29795 in object_finalize_child_property (obj=0x555556a52c00, name=0x555557125170 "vnic01", opaque=0x5555571dbc20) at ../qom/object.c:1732
#11 0x0000555555d271ac in object_property_del_child (obj=0x555556a52c00, child=0x5555571dbc20) at ../qom/object.c:649
#12 0x0000555555d27287 in object_unparent (obj=0x5555571dbc20) at ../qom/object.c:668
#13 0x000055555586da8a in acpi_pcihp_eject_slot (s=0x55555768a510, bsel=0, slots=16) at ../hw/acpi/pcihp.c:244
#14 0x000055555586e50c in pci_write (opaque=0x55555768a510, addr=8, data=16, size=4) at ../hw/acpi/pcihp.c:520
#15 0x0000555555c650a3 in memory_region_write_accessor (mr=0x55555768b120, addr=8, value=0x7fffed4a06a8, size=4, shift=0, mask=4294967295, attrs=...)
    at ../softmmu/memory.c:492
#16 0x0000555555c652e7 in access_with_adjusted_size (addr=8, value=0x7fffed4a06a8, size=4, access_size_min=1, access_size_max=4, access_fn=
    0x555555c64fad <memory_region_write_accessor>, mr=0x55555768b120, attrs=...) at ../softmmu/memory.c:554
#17 0x0000555555c683dd in memory_region_dispatch_write (mr=0x55555768b120, addr=8, data=16, op=MO_32, attrs=...) at ../softmmu/memory.c:1514
#18 0x0000555555c758f6 in flatview_write_continue (fv=0x7ffddc009460, addr=44552, attrs=..., ptr=0x7ffff7fed000, len=4, addr1=8, l=4, mr=0x55555768b120)
    at ../softmmu/physmem.c:2825
#19 0x0000555555c75a59 in flatview_write (fv=0x7ffddc009460, addr=44552, attrs=..., buf=0x7ffff7fed000, len=4) at ../softmmu/physmem.c:2867
#20 0x0000555555c75e09 in address_space_write (as=0x5555567b3420 <address_space_io>, addr=44552, attrs=..., buf=0x7ffff7fed000, len=4)
    at ../softmmu/physmem.c:2963
#21 0x0000555555c75e76 in address_space_rw (as=0x5555567b3420 <address_space_io>, addr=44552, attrs=..., buf=0x7ffff7fed000, len=4, is_write=true)
    at ../softmmu/physmem.c:2973
#22 0x0000555555d0db63 in kvm_handle_io (port=44552, attrs=..., data=0x7ffff7fed000, direction=1, size=4, count=1) at ../accel/kvm/kvm-all.c:2693
#23 0x0000555555d0e2dd in kvm_cpu_exec (cpu=0x555556ae3cb0) at ../accel/kvm/kvm-all.c:2944
#24 0x0000555555d10faa in kvm_vcpu_thread_fn (arg=0x555556ae3cb0) at ../accel/kvm/kvm-accel-ops.c:49
#25 0x0000555555eec4de in qemu_thread_start (args=0x555556af2de0) at ../util/qemu-thread-posix.c:504
#26 0x00007ffff55eeea5 in start_thread () at /lib64/libpthread.so.0
#27 0x00007ffff53179fd in clone () at /lib64/libc.so.6


这里是RCU的callstack. device_finalize()会调用qapi_event_send_device_deleted()发送event.

(gdb) bt
#0  device_finalize (obj=0x5555571e3fe0) at ../hw/core/qdev.c:727
#1  0x0000555555d272b8 in object_deinit (obj=0x5555571e3fe0, type=0x55555683a5f0) at ../qom/object.c:675
#2  0x0000555555d272e6 in object_deinit (obj=0x5555571e3fe0, type=0x55555682f140) at ../qom/object.c:679
#3  0x0000555555d272e6 in object_deinit (obj=0x5555571e3fe0, type=0x55555682dee0) at ../qom/object.c:679
#4  0x0000555555d2732a in object_finalize (data=0x5555571e3fe0) at ../qom/object.c:689
#5  0x0000555555d28147 in object_unref (objptr=0x5555571e3fe0) at ../qom/object.c:1192
#6  0x0000555555d1fbc2 in bus_free_bus_child (kid=0x555556df11f0) at ../hw/core/qdev.c:55
#7  0x0000555555ef6fe1 in call_rcu_thread (opaque=0x0) at ../util/rcu.c:284
#8  0x0000555555eec4de in qemu_thread_start (args=0x5555567e7e80) at ../util/qemu-thread-posix.c:504
#9  0x00007ffff55eeea5 in start_thread () at /lib64/libpthread.so.0
#10 0x00007ffff53179fd in clone () at /lib64/libc.so.6
