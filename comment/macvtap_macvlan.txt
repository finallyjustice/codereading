macvlan的功能是给同一个物理网卡配置多个MAC地址,可以在软件上配置多个以太网口,属于物理层的功能.

macvtap是用来替代tun/tap和bridge内核模块的.macvtap是基于macvlan这个模块,提供tun/tap中tap设备使用的接口,使用macvtap以太网口的虚拟机能够通过tap设备接口,直接将数据传递到内核中对应的macvtap以太网中.

macvtap p工作模式.

1. vepa

同一物理网卡下的Mmacvtap设备之间的流量也要发送到外部交换机再由外部交换机转发回服务器,前提是交换机必须支持hairpin模式.VEPA (Virtual Edge Port Aggregator)是默认的工作模式,它的初衷是希望由物理的交换机来进行所有包交换,这样可以在交换机上统一配置DHCP filtering之类的策略.

因此这个模式下的macvlan会把所有的包都扔到外部端口上去,期待交换机进行包交换,把目的地址为本机机器的包再传回来.很多交换机考虑安全原因(防止包打环)是不支持这样的行为的,但是一些较新的交换机上有这样一个特性,叫hairpin,VEPA或者802.1Qbg.

2. bridge

同一物理网卡下的macvtap设备可以直接进行以太网帧交换,不需要外部交换机介入.

3. private

同一物理网卡下的macvtap设备互相无法联通,无论外部交换机支不支持hairpin模式.


----------------------------------------

libvirt中的例子.

    <interface type='direct'>
      <mac address='52:54:00:e8:ff:01'/>
      <source dev='eno2' mode='bridge'/>
      <model type='virtio'/>
      <driver queues='8'/>
      <address type='pci' domain='0x0000' bus='0x00' slot='0x03' function='0x0'/>
    </interface>


# ethtool -i macvtap0
driver: macvlan
version: 0.1
firmware-version: 
expansion-rom-version: 
bus-info: 
supports-statistics: no
supports-test: no
supports-eeprom-access: no
supports-register-dump: no
supports-priv-flags: no


# ip -d link show macvtap0
13: macvtap0@eno2: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc pfifo_fast state LOWERLAYERDOWN mode DEFAULT group default qlen 500
    link/ether 52:54:00:e8:ff:01 brd ff:ff:ff:ff:ff:ff promiscuity 0 
    macvtap mode bridge addrgenmode eui64 numtxqueues 1 numrxqueues 1 gso_max_size 65536 gso_max_segs 65535


# ls /sys/class/net/macvtap0/tap13/
dev  device  power  subsystem  uevent


# ls /sys/class/net/macvtap0/lower_eno2/
addr_assign_type  broadcast        device    dormant  gro_flush_timeout  iflink     name_assign_type  phys_port_id    power       speed       tx_queue_len  upper_macvtap0
address           carrier          dev_id    duplex   ifalias            link_mode  netdev_group      phys_port_name  proto_down  statistics  type
addr_len          carrier_changes  dev_port  flags    ifindex            mtu        operstate         phys_switch_id  queues      subsystem   uevent


QEMU中有"-netdev tap,fds=37:38:39:40:41:42:43:44,id=hostnet0,vhost=on,vhostfds=45:46:47:48:49:50:51:52"


# lsof -p 4610 | egrep "vhost|tap"
qemu-syst 4610 root   37u      CHR              238,1        0t0    275051 /dev/tap13
qemu-syst 4610 root   38u      CHR              238,1        0t0    275051 /dev/tap13
qemu-syst 4610 root   39u      CHR              238,1        0t0    275051 /dev/tap13
qemu-syst 4610 root   40u      CHR              238,1        0t0    275051 /dev/tap13
qemu-syst 4610 root   41u      CHR              238,1        0t0    275051 /dev/tap13
qemu-syst 4610 root   42u      CHR              238,1        0t0    275051 /dev/tap13
qemu-syst 4610 root   43u      CHR              238,1        0t0    275051 /dev/tap13
qemu-syst 4610 root   44u      CHR              238,1        0t0    275051 /dev/tap13
qemu-syst 4610 root   45u      CHR             10,238        0t0     18509 /dev/vhost-net
qemu-syst 4610 root   46u      CHR             10,238        0t0     18509 /dev/vhost-net
qemu-syst 4610 root   47u      CHR             10,238        0t0     18509 /dev/vhost-net
qemu-syst 4610 root   48u      CHR             10,238        0t0     18509 /dev/vhost-net
qemu-syst 4610 root   49u      CHR             10,238        0t0     18509 /dev/vhost-net
qemu-syst 4610 root   50u      CHR             10,238        0t0     18509 /dev/vhost-net
qemu-syst 4610 root   51u      CHR             10,238        0t0     18509 /dev/vhost-net
qemu-syst 4610 root   52u      CHR             10,238        0t0     18509 /dev/vhost-net

----------------------------------------




https://www.cnblogs.com/echo1937/p/7249812.html

https://cizixs.com/2017/02/14/network-virtualization-macvlan/

https://blog.kghost.info/2013/03/27/linux-network-tun/index.html

https://developers.redhat.com/blog/2018/10/22/introduction-to-linux-interfaces-for-virtual-networking/

https://www.cnblogs.com/lsgxeva/p/8964363.html
