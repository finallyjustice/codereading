IRQD_AFFINITY_MANAGED.

alloc_descs()
if (affinity->is_managed) {
	flags = IRQD_AFFINITY_MANAGED |
		IRQD_MANAGED_SHUTDOWN;
}

irqd_affinity_is_managed

msix_setup_entries() --> 疑似关键函数



msi_domain_set_affinity()

-----------------------------

核心思想: 第一步分配pci的msi_desc的affinity (expected),
第二步分配vector和更新effective affinity.

nvme_reset_work()
 -> nvme_setup_io_queues()
     -> nvme_setup_irqs() 
         -> pci_alloc_irq_vectors_affinity() ==>> 第一步
     -> queue_request_irq() ==>> 第二步



msix_setup_entries()
 -> irq_create_affinity_masks()
 -> alloc_msi_entry()

msix_setup_entries()会用irq_create_affinity_masks()初始化每一个vector的affnity:

在nvme和virtio-blk测试的时候...

nvme: 8个cpu, 9个queue, 9个vector
0 (admin) : masks[0].mask=0-7, masks[0].is_managed=0
1 (io)    : masks[1].mask=0, masks[0].is_managed=1
2 (io)    : masks[2].mask=1, masks[1].is_managed=1
3 (io)    : masks[3].mask=2, masks[2].is_managed=1
4 (io)    : masks[4].mask=3, masks[3].is_managed=1
5 (io)    : masks[5].mask=4, masks[4].is_managed=1
6 (io)    : masks[6].mask=5, masks[5].is_managed=1
7 (io)    : masks[7].mask=6, masks[6].is_managed=1
8 (io)    : masks[8].mask=7, masks[7].is_managed=1

virtblk: 8个cpu, 5个queue, 5个vector
0 (admin) : masks[0].mask=0-7, masks[0].is_managed=0
1 (io)    : masks[1].mask=0-1, masks[1].is_managed=1
2 (io)    : masks[2].mask=2-3, masks[2].is_managed=1
3 (io)    : masks[3].mask=4-5, masks[3].is_managed=1
4 (io)    : masks[4].mask=6-7, masks[4].is_managed=1

然后在alloc_msi_entry()更新到msi_desc->affinity.


pci_alloc_irq_vectors_affinity()
 -> 间接到msi_domain_alloc_irqs()
     -> __irq_domain_alloc_irqs()

把msi_desc->affinity转换到irq_desc



irq_msi_compose_msg()编辑msix msg, 会用到irq_cfg->apicid和irq_cfg->vector.

cfg->dest_apicid和cfg->vector更新的地方:
  - arch/x86/kernel/apic/vector.c|147| <<apic_update_irq_cfg>> apicd->hw_irq_cfg.dest_apicid = apic->calc_dest_apicid(cpu);
  - arch/x86/kernel/apic/vector.c|150| <<apic_update_irq_cfg>> apicd->hw_irq_cfg.dest_apicid);

[0] irq_msi_compose_msg
[0] irq_chip_compose_msi_msg
[0] msi_domain_set_affinity
[0] irq_do_set_affinity
[0] irq_startup
[0] __setup_irq
[0] request_threaded_irq
[0] pci_request_irq
[0] queue_request_irq
[0] nvme_reset_work
[0] process_one_work
[0] worker_thread
[0] kthread

