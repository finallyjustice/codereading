
假设PAGE_SHIFT=12
ARM64_HW_PGTABLE_LEVEL_SHIFT(0) = ((12 - 3) * (4 - (0)) + 3) = 39
ARM64_HW_PGTABLE_LEVEL_SHIFT(1) = ((12 - 3) * (4 - (1)) + 3) = 30
ARM64_HW_PGTABLE_LEVEL_SHIFT(2) = ((12 - 3) * (4 - (2)) + 3) = 21
ARM64_HW_PGTABLE_LEVEL_SHIFT(3) = ((12 - 3) * (4 - (3)) + 3) = 12
ARM64_HW_PGTABLE_LEVEL_SHIFT(4) = ((12 - 3) * (4 - (4)) + 3) = 3

下面的是Size mapped by an entry at level n ( 0 <= n <= 3)
level 3的一个entry map的大小是 1 << 12 = 4K, 一个page table就是2M
level 2的一个entry map的大小是 1 << 21 = 2M, 一个page table就是1G
level 1的一个entry map的大小是 1 << 30 = 1G, 一个page table就是512G
level 0的一个entry map的大小是 1 << 39 = 512G, 一个page table就是512G x 512

#define ARM64_HW_PGTABLE_LEVEL_SHIFT(n) ((PAGE_SHIFT - 3) * (4 - (n)) + 3)



level 2的一个entry map的大小是 1 << 21 = 2M
/*
 * PMD_SHIFT determines the size a level 2 page table entry can map.
 */
#define PMD_SHIFT               ARM64_HW_PGTABLE_LEVEL_SHIFT(2)

level 1的一个entry map的大小是 1 << 30 = 1G
/*
 * PUD_SHIFT determines the size a level 1 page table entry can map.
 */
#define PUD_SHIFT               ARM64_HW_PGTABLE_LEVEL_SHIFT(1)

一个例子是CONFIG_PGTABLE_LEVELS=4.
4 - 4 = 0
level 0的一个entry map的大小是 1 << 39 = 512G
/*
 * PGDIR_SHIFT determines the size a top-level page table entry can map
 * (depending on the configuration, this level can be 0, 1 or 2).
 */
#define PGDIR_SHIFT             ARM64_HW_PGTABLE_LEVEL_SHIFT(4 - CONFIG_PGTABLE_LEVELS)



level 3的一个entry叫PTE
level 2的一个entry叫PMD
level 1的一个entry叫PUD
level 0的一个entry叫P4D
