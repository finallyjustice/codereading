tools/testing/selftests/kvm/dirty_log_test.c

首先在memslot的flag使用KVM_MEM_LOG_DIRTY_PAGES.

使用3种方式收集dirty bit.

 544 struct log_mode {
 545         const char *name;
 546         /* Return true if this mode is supported, otherwise false */
 547         bool (*supported)(void);
 548         /* Hook when the vm creation is done (before vcpu creation) */
 549         void (*create_vm_done)(struct kvm_vm *vm);
 550         /* Hook to collect the dirty pages into the bitmap provided */
 551         void (*collect_dirty_pages) (struct kvm_vcpu *vcpu, int slot,
 552                                      void *bitmap, uint32_t num_pages,
 553                                      uint32_t *ring_buf_idx);
 554         /* Hook to call when after each vcpu run */
 555         void (*after_vcpu_run)(struct kvm_vcpu *vcpu, int ret, int err);
 556 } log_modes[LOG_MODE_NUM] = {
 557         {
 558                 .name = "dirty-log",
 559                 .collect_dirty_pages = dirty_log_collect_dirty_pages,
 560                 .after_vcpu_run = default_after_vcpu_run,
 561         },
 562         {
 563                 .name = "clear-log",
 564                 .supported = clear_log_supported,
 565                 .create_vm_done = clear_log_create_vm_done,
 566                 .collect_dirty_pages = clear_log_collect_dirty_pages,
 567                 .after_vcpu_run = default_after_vcpu_run,
 568         },
 569         {
 570                 .name = "dirty-ring",
 571                 .supported = dirty_ring_supported,
 572                 .create_vm_done = dirty_ring_create_vm_done,
 573                 .collect_dirty_pages = dirty_ring_collect_dirty_pages,
 574                 .after_vcpu_run = dirty_ring_after_vcpu_run,
 575         },
 576 };


1. "dirty-log"

使用vm_ioctl(vm, KVM_GET_DIRTY_LOG, &args); 自动clear dirty log.

2. "clear-log"

需要KVM_CAP_MANUAL_DIRTY_LOG_PROTECT2这个cap支持.

先用vm_ioctl(vm, KVM_GET_DIRTY_LOG, &args);收集dirty log
再用vm_ioctl(vm, KVM_CLEAR_DIRTY_LOG, &args);clear dirty log


3. "durty-ring"

需要KVM_CAP_DIRTY_LOG_RING或者KVM_CAP_DIRTY_LOG_RING_ACQ_REL支持

从dirty ring buffer读取,
然后用__vm_ioctl(vm, KVM_RESET_DIRTY_RINGS, NULL);重置
