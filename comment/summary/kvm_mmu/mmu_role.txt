分析kvm_cpu_role和kvm_mmu_page_role的使用
---


每个kvm_mmu一个kvm_cpu_role和kvm_mmu_page_role.

struct kvm_mmu:
-> union kvm_cpu_role cpu_role;
-> union kvm_mmu_page_role root_role;

每个kvm_mmu_page一个kvm_mmu_page_role.

struct kvm_mmu_page:
-> union kvm_mmu_page_role role;

 451 union kvm_cpu_role {
 452         u64 as_u64;
 453         struct {
 454                 union kvm_mmu_page_role base;
 455                 union kvm_mmu_extended_role ext;
 456         };
 457 };


引入了最早的base_role

commit a770f6f28b1a9287189f3dc8333eb694d9a2f0ab
Author: Avi Kivity <avi@redhat.com>
Date:   Sun Dec 21 19:20:09 2008 +0200

    KVM: MMU: Inherit a shadow page's guest level count from vcpu setup
    
    Instead of "calculating" it on every shadow page allocation, set it once
    when switching modes, and copy it when allocating pages.
    
    This doesn't buy us much, but sets up the stage for inheriting more
    information related to the mmu setup.
    
    Signed-off-by: Avi Kivity <avi@redhat.com>


为了加入extend的数据

commit 36d9594dfbf22a59adb986d85e0543886ab898f2
Author: Vitaly Kuznetsov <vkuznets@redhat.com>
Date:   Mon Oct 8 21:28:10 2018 +0200

    x86/kvm/mmu: make space for source data caching in struct kvm_mmu
    
    In preparation to MMU reconfiguration avoidance we need a space to
    cache source data. As this partially intersects with kvm_mmu_page_role,
    create 64bit sized union kvm_mmu_role holding both base and extended data.
    No functional change.
    
    Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Reviewed-by: Sean Christopherson <sean.j.christopherson@intel.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>


commit e5ed0fb01004f93ddf8a0c632cbc8a3f1ea5b518
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Fri Feb 11 06:50:11 2022 -0500

KVM: x86/mmu: split cpu_role from mmu_role

Snapshot the state of the processor registers that govern page walk into
a new field of struct kvm_mmu.  This is a more natural representation
than having it *mostly* in mmu_role but not exclusively; the delta
right now is represented in other fields, such as root_level.

The nested MMU now has only the CPU role; and in fact the new function
kvm_calc_cpu_role is analogous to the previous kvm_calc_nested_mmu_role,
except that it has role.base.direct equal to !CR0.PG.  For a walk-only
MMU, "direct" has no meaning, but we set it to !CR0.PG so that
role.ext.cr0_pg can go away in a future patch.

Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>


这个patchset可以优化

[PATCH v2 00/18] KVM: MMU: do not unload MMU roots on all role changes
https://lore.kernel.org/kvm/20220217210340.312449-1-pbonzini@redhat.com/

------------------

很多地方可以修改, 但是初始化的时候:

6085 void kvm_init_mmu(struct kvm_vcpu *vcpu)
6086 {
6087         struct kvm_mmu_role_regs regs = vcpu_to_role_regs(vcpu);
6088         union kvm_cpu_role cpu_role = kvm_calc_cpu_role(vcpu, &regs);
6089
6090         if (mmu_is_nested(vcpu))
6091                 init_kvm_nested_mmu(vcpu, cpu_role);
6092         else if (tdp_enabled)
6093                 init_kvm_tdp_mmu(vcpu, cpu_role);
6094         else
6095                 init_kvm_softmmu(vcpu, cpu_role);
6096 }
6097 EXPORT_SYMBOL_GPL(kvm_init_mmu)


问题: 什么时候用cpu_role? 什么使用root_role?

is_cr0_pg()
is_cr4_pae()
shadow_walk_init_using_root()
mmu_alloc_shadow_roots()
kvm_mmu_sync_roots()




