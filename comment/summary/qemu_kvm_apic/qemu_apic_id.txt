一共有下面的几个field.

X86CPU->apic_id
CPUState->cpu_index
APICCommonState->initial_apic_id


QEMU通过ioctl创建vCPU的时候是通过kvm_arch_vcpu_id()和KVM进行match的.
i386下kvm_arch_vcpu_id()就是用的cpu->apic_id.

844 unsigned long kvm_arch_vcpu_id(CPUState *cs)
845 {
846     X86CPU *cpu = X86_CPU(cs);
847     return cpu->apic_id;
848 }

X86CPU->apic_id是QEMU通过topology计算的.

这个被通过apic_common_set_id()设置成APICCommonState->initial_apic_id.

(gdb) bt
#0  apic_common_set_id (obj=0x55555755d140, v=0x55555778f340, name=0x555556393d55 "id", opaque=0x0, errp=0x5555573a2118 <error_abort>) at ../hw/intc/apic_common.c:431
#1  0x0000555555f26c07 in object_property_set (obj=0x55555755d140, name=0x555556393d55 "id", v=0x55555778f340, errp=0x5555573a2118 <error_abort>) at ../qom/object.c:1449
#2  0x0000555555f2ba94 in object_property_set_qobject (obj=0x55555755d140, name=0x555556393d55 "id", value=0x55555775d1d0, errp=0x5555573a2118 <error_abort>)
    at ../qom/qom-qobject.c:28
    0x0000555555f27138 in object_property_set_int (obj=0x55555755d140, name=0x555556393d55 "id", value=1, errp=0x5555573a2118 <error_abort>) at ../qom/object.c:1552
    0x0000555555f1bc8a in qdev_prop_set_uint32 (dev=0x55555755d140, name=0x555556393d55 "id", value=1) at ../hw/core/qdev-properties.c:851
#5  0x0000555555d1a64e in x86_cpu_apic_create (cpu=0x555557785d90, errp=0x7fffffffd458) at ../target/i386/cpu-apic.c:66
#6  0x0000555555daaf63 in x86_cpu_realizefn (dev=0x555557785d90, errp=0x7fffffffd520) at ../target/i386/cpu.c:8342
#7  0x0000555555da3bf3 in max_x86_cpu_realize (dev=0x555557785d90, errp=0x7fffffffd520) at ../target/i386/cpu.c:5689
#8  0x0000555555f1e213 in device_set_realized (obj=0x555557785d90, value=true, errp=0x7fffffffd630) at ../hw/core/qdev.c:494
#9  0x0000555555f29192 in property_set_bool (obj=0x555557785d90, v=0x55555778ed20, name=0x5555563e9969 "realized", opaque=0x555557460d40, errp=0x7fffffffd630)
    at ../qom/object.c:2374
#10 0x0000555555f26c07 in object_property_set (obj=0x555557785d90, name=0x5555563e9969 "realized", v=0x55555778ed20, errp=0x7fffffffd630) at ../qom/object.c:1449
#11 0x0000555555f2ba94 in object_property_set_qobject (obj=0x555557785d90, name=0x5555563e9969 "realized", value=0x55555778c910, errp=0x5555573a2120 <error_fatal>)
    at ../qom/qom-qobject.c:28
#12 0x0000555555f26fac in object_property_set_bool (obj=0x555557785d90, name=0x5555563e9969 "realized", value=true, errp=0x5555573a2120 <error_fatal>) at ../qom/object.c:1519
#13 0x0000555555f1d90b in qdev_realize (dev=0x555557785d90, bus=0x0, errp=0x5555573a2120 <error_fatal>) at ../hw/core/qdev.c:276
#14 0x0000555555d591ec in x86_cpu_new (x86ms=0x5555576d8c50, apic_id=1, errp=0x5555573a2120 <error_fatal>) at ../hw/i386/x86-common.c:63
#15 0x0000555555d59366 in x86_cpus_init (x86ms=0x5555576d8c50, default_cpu_version=1) at ../hw/i386/x86-common.c:114
#16 0x0000555555d612c5 in pc_q35_init (machine=0x5555576d8c50) at ../hw/i386/pc_q35.c:191
#17 0x0000555555d61c95 in pc_q35_machine_10_0_init (machine=0x5555576d8c50) at ../hw/i386/pc_q35.c:369
#18 0x000055555597d861 in machine_run_board_init (machine=0x5555576d8c50, mem_path=0x0, errp=0x7fffffffd900) at ../hw/core/machine.c:1682
#19 0x0000555555c35477 in qemu_init_board () at ../system/vl.c:2711
#20 0x0000555555c3581c in qmp_x_exit_preconfig (errp=0x5555573a2120 <error_fatal>) at ../system/vl.c:2807
#21 0x0000555555c38346 in qemu_init (argc=21, argv=0x7fffffffdc28) at ../system/vl.c:3843
#22 0x00005555560d2905 in main (argc=21, argv=0x7fffffffdc28) at ../system/main.c:71


尽管vcpu_id是cpu->apic_id, 创建的pthread的name是用的CPUState->cpu_index。

 99 static void kvm_start_vcpu_thread(CPUState *cpu)
100 {   
101     char thread_name[VCPU_THREAD_NAME_SIZE];
102     
103     snprintf(thread_name, VCPU_THREAD_NAME_SIZE, "CPU %d/KVM",
104              cpu->cpu_index);
105     qemu_thread_create(cpu->thread, thread_name, kvm_vcpu_thread_fn,
106                        cpu, QEMU_THREAD_JOINABLE);
107 }


CPUState->cpu_index是在cpu_list_add()分配的.

85 void cpu_list_add(CPUState *cpu)
86 {   
87     static bool cpu_index_auto_assigned;
88         
89     QEMU_LOCK_GUARD(&qemu_cpu_list_lock);
90     if (cpu->cpu_index == UNASSIGNED_CPU_INDEX) {
91         cpu_index_auto_assigned = true;
92         cpu->cpu_index = cpu_get_free_index();
93         assert(cpu->cpu_index != UNASSIGNED_CPU_INDEX);
94     } else {
95         assert(!cpu_index_auto_assigned);
96     }
97     QTAILQ_INSERT_TAIL_RCU(&cpus_queue, cpu, node);
98     cpu_list_generation_id++;
99 }

(gdb) bt
#0  cpu_list_add (cpu=0x5555577657b0) at ../cpu-common.c:82
#1  0x000055555588b9de in cpu_exec_realizefn (cpu=0x5555577657b0, errp=0x7fffffffd428) at ../hw/core/cpu-common.c:193
#2  0x0000555555daa8ef in x86_cpu_realizefn (dev=0x5555577657b0, errp=0x7fffffffd4f0) at ../target/i386/cpu.c:8185
#3  0x0000555555da3bf3 in max_x86_cpu_realize (dev=0x5555577657b0, errp=0x7fffffffd4f0) at ../target/i386/cpu.c:5689
#4  0x0000555555f1e213 in device_set_realized (obj=0x5555577657b0, value=true, errp=0x7fffffffd600) at ../hw/core/qdev.c:494
#5  0x0000555555f29192 in property_set_bool (obj=0x5555577657b0, v=0x55555776e660, name=0x5555563e9969 "realized", opaque=0x555557461080, errp=0x7fffffffd600)
    at ../qom/object.c:2374
#6  0x0000555555f26c07 in object_property_set (obj=0x5555577657b0, name=0x5555563e9969 "realized", v=0x55555776e660, errp=0x7fffffffd600) at ../qom/object.c:1449
#7  0x0000555555f2ba94 in object_property_set_qobject (obj=0x5555577657b0, name=0x5555563e9969 "realized", value=0x55555776c2b0, errp=0x5555573a2120 <error_fatal>)
    at ../qom/qom-qobject.c:28
#8  0x0000555555f26fac in object_property_set_bool (obj=0x5555577657b0, name=0x5555563e9969 "realized", value=true, errp=0x5555573a2120 <error_fatal>)
    at ../qom/object.c:1519
#9  0x0000555555f1d90b in qdev_realize (dev=0x5555577657b0, bus=0x0, errp=0x5555573a2120 <error_fatal>) at ../hw/core/qdev.c:276
#10 0x0000555555d591ec in x86_cpu_new (x86ms=0x5555576d6810, apic_id=1, errp=0x5555573a2120 <error_fatal>) at ../hw/i386/x86-common.c:63
#11 0x0000555555d59366 in x86_cpus_init (x86ms=0x5555576d6810, default_cpu_version=1) at ../hw/i386/x86-common.c:114
#12 0x0000555555d612c5 in pc_q35_init (machine=0x5555576d6810) at ../hw/i386/pc_q35.c:191
#13 0x0000555555d61c95 in pc_q35_machine_10_0_init (machine=0x5555576d6810) at ../hw/i386/pc_q35.c:369
#14 0x000055555597d861 in machine_run_board_init (machine=0x5555576d6810, mem_path=0x0, errp=0x7fffffffd8d0) at ../hw/core/machine.c:1682
#15 0x0000555555c35477 in qemu_init_board () at ../system/vl.c:2711
#16 0x0000555555c3581c in qmp_x_exit_preconfig (errp=0x5555573a2120 <error_fatal>) at ../system/vl.c:2807
#17 0x0000555555c38346 in qemu_init (argc=25, argv=0x7fffffffdbf8) at ../system/vl.c:3843
#18 0x00005555560d294a in main (argc=25, argv=0x7fffffffdbf8) at ../system/main.c:71


(qemu) info lapic 1 ==> cpu->apic_id
dumping local APIC state for CPU 1 ==> CPU(cpu)->cpu_index

LVT0	 0x00010700 active-hi edge  masked                      ExtINT (vec 0)
LVT1	 0x00010400 active-hi edge  masked                      NMI
LVTPC	 0x00000400 active-hi edge                              NMI
LVTERR	 0x000000fe active-hi edge                              Fixed  (vec 254)
LVTTHMR	 0x00010000 active-hi edge  masked                      Fixed  (vec 0)
LVTT	 0x000400ec active-hi edge                 tsc-deadline Fixed  (vec 236)
Timer	 DCR=0x0 (divide by 2) initial_count = 0 current_count = 0
SPIV	 0x000001ff APIC enabled, focus=off, spurious vec 255
ICR	 0x000000fd physical edge de-assert no-shorthand
ICR2	 0x00000000 cpu 0 (X2APIC ID)
ESR	 0x00000000
ISR	 (none)
IRR	 (none)

APR 0x00 TPR 0x10 DFR 0x0f LDR 0x00 PPR 0x10
