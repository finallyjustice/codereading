Bug 216177 - kvm-unit-tests vmx has about 60% of failure chance

https://bugzilla.kernel.org/show_bug.cgi?id=216177


关于build的方式.

./configure
make standalone
cd tests
./vmx -cpu host




这是log的例子:

$ sudo ./vmx -cpu host
BUILD_HEAD=ca85dda2
timeout -k 1s --foreground 90s /usr/bin/qemu-system-x86_64 --no-reboot -nodefaults -device pc-testdev -device isa-debug-exit,iobase=0xf4,iosize=0x4 -vnc none -serial stdio -device pci-testdev -machine accel=kvm -kernel /tmp/tmp.ChkldoqbrY -smp 1 -cpu max,+vmx -append -exit_monitor_from_l2_test -ept_access* -vmx_smp* -vmx_vmcs_shadow_test -atomic_switch_overflow_msrs_test -vmx_init_signal_test -vmx_apic_passthrough_tpr_threshold_test -apic_reg_virt_test -virt_x2apic_mode_test -vmx_pf_exception_test -vmx_pf_no_vpid_test -vmx_pf_invvpid_test -vmx_pf_vpid_test # -initrd /tmp/tmp.WUHJeePuPN
enabling apic
paging enabled
cr0 = 80010011
cr3 = 1007000
cr4 = 20
filter = -exit_monitor_from_l2_test, test = test_vmx_feature_control
VMX enabled and locked by BIOS
filter = -exit_monitor_from_l2_test, test = test_vmxon
PASS: test vmxon with unaligned vmxon region
PASS: test vmxon with bits set beyond physical address width
PASS: test vmxon with invalid revision identifier
PASS: test vmxon with valid vmxon region
filter = -exit_monitor_from_l2_test, test = test_vmptrld
PASS: test vmptrld with unaligned vmcs
PASS: test vmptrld with vmcs address bits set beyond physical address width
PASS: test vmptrld with vmxon region
PASS: test vmptrld with vmxon region vm-instruction error
PASS: test vmptrld with valid vmcs region
filter = -exit_monitor_from_l2_test, test = test_vmclear
PASS: test vmclear with unaligned vmcs
PASS: test vmclear with vmcs address bits set beyond physical address width
PASS: test vmclear with vmxon region
PASS: test vmclear with valid vmcs region
Skipping volatile field 4400
PASS: test vmclear flush (current VMCS)
Skipping volatile field 4400
PASS: test vmclear flush (!current VMCS)
filter = -exit_monitor_from_l2_test, test = test_vmptrst
PASS: test vmptrst
filter = -exit_monitor_from_l2_test, test = test_vmwrite_vmread
Skipping volatile field 4400
PASS: VMWRITE/VMREAD
FAIL: VMX_VMCS_ENUM.MAX_INDEX expected: 19, actual: 17
filter = -exit_monitor_from_l2_test, test = test_vmcs_high
PASS: VMREAD TSC_OFFSET after VMWRITE TSC_OFFSET
PASS: VMREAD TSC_OFFSET_HI after VMWRITE TSC_OFFSET
PASS: VMREAD TSC_OFFSET_HI after VMWRITE TSC_OFFSET_HI
PASS: VMREAD TSC_OFFSET after VMWRITE TSC_OFFSET_HI
filter = -exit_monitor_from_l2_test, test = test_vmcs_lifecycle
VMCLEAR VMCS0
VMPTRLD VMCS0
Skipping volatile field 4400
PASS: current:VMCS0 active:[VMCS0]
VMCLEAR VMCS0
VMPTRLD VMCS0
Skipping volatile field 4400
PASS: current:VMCS0 active:[VMCS0]
VMCLEAR VMCS1
Skipping volatile field 4400
PASS: current:VMCS0 active:[VMCS0]
VMPTRLD VMCS1
Skipping volatile field 4400
PASS: current:VMCS1 active:[VMCS0,VCMS1]
VMPTRLD VMCS0
Skipping volatile field 4400
PASS: current:VMCS0 active:[VMCS0,VCMS1]
VMPTRLD VMCS1
Skipping volatile field 4400
PASS: current:VMCS1 active:[VMCS0,VCMS1]
VMPTRLD VMCS1
Skipping volatile field 4400
PASS: current:VMCS1 active:[VMCS0,VCMS1]
VMCLEAR VMCS0
Skipping volatile field 4400
PASS: current:VMCS1 active:[VCMS1]
VMPTRLD VMCS1
Skipping volatile field 4400
PASS: current:VMCS1 active:[VCMS1]
VMCLEAR VMCS0
VMCLEAR VMCS1
filter = -exit_monitor_from_l2_test, test = test_vmx_caps

Test suite: VMX capability reporting
PASS: MSR_IA32_VMX_BASIC
PASS: MSR_IA32_VMX_MISC
PASS: MSR_IA32_VMX_PINBASED_CTLS
PASS: MSR_IA32_VMX_PROCBASED_CTLS
PASS: MSR_IA32_VMX_PROCBASED_CTLS2
PASS: MSR_IA32_VMX_EXIT_CTLS
PASS: MSR_IA32_VMX_ENTRY_CTLS
PASS: MSR_IA32_VMX_IA32_VMX_CR0_FIXED0/1
PASS: MSR_IA32_VMX_IA32_VMX_CR4_FIXED0/1
PASS: MSR_IA32_VMX_VMCS_ENUM
PASS: MSR_IA32_VMX_EPT_VPID_CAP
filter = -exit_monitor_from_l2_test, test = test_vmread_flags_touch
PASS: RIP has not been advanced!
PASS: The low byte of RFLAGS was preserved!
PASS: The #PF handler was invoked
PASS: RIP has not been advanced!
PASS: The low byte of RFLAGS was preserved!
PASS: The #PF handler was invoked
filter = -exit_monitor_from_l2_test, test = test_vmwrite_flags_touch
PASS: RIP has not been advanced!
PASS: The low byte of RFLAGS was preserved!
PASS: The #PF handler was invoked
PASS: RIP has not been advanced!
PASS: The low byte of RFLAGS was preserved!
PASS: The #PF handler was invoked
filter = -exit_monitor_from_l2_test, test = null

Test suite: null
PASS: Basic VMX test
filter = -exit_monitor_from_l2_test, test = vmenter

Test suite: vmenter
PASS: test vmlaunch
PASS: test vmresume
filter = -exit_monitor_from_l2_test, test = preemption timer

Test suite: preemption timer
PASS: Keep preemption value
PASS: Save preemption value
PASS: busy-wait for preemption timer
PASS: preemption timer during hlt
PASS: preemption timer with 0 value
filter = -exit_monitor_from_l2_test, test = control field PAT

Test suite: control field PAT
PASS: Exit save PAT
PASS: Exit load PAT
PASS: Entry load PAT
filter = -exit_monitor_from_l2_test, test = control field EFER

Test suite: control field EFER
PASS: Exit save EFER
PASS: Exit load EFER
PASS: Entry load EFER
filter = -exit_monitor_from_l2_test, test = CR shadowing

Test suite: CR shadowing
PASS: Read through CR0
PASS: Read through CR4
PASS: Write through CR0
PASS: Write through CR4
PASS: Read shadowing CR0
PASS: Read shadowing CR4
PASS: Write shadowing CR0 (same value)
PASS: Write shadowing CR4 (same value)
PASS: Write shadowing different X86_CR0_TS
PASS: Write shadowing different X86_CR0_MP
PASS: Write shadowing different X86_CR4_TSD
PASS: Write shadowing different X86_CR4_DE
filter = -exit_monitor_from_l2_test, test = I/O bitmap

Test suite: I/O bitmap
PASS: I/O bitmap - I/O pass
PASS: I/O bitmap - I/O width, byte
PASS: I/O bitmap - I/O direction, in
PASS: I/O bitmap - trap in
PASS: I/O bitmap - I/O width, word
PASS: I/O bitmap - I/O direction, out
PASS: I/O bitmap - trap out
PASS: I/O bitmap - I/O width, long
PASS: I/O bitmap - I/O width, long
PASS: I/O bitmap - I/O port, low part
PASS: I/O bitmap - I/O port, high part
PASS: I/O bitmap - partial pass
PASS: I/O bitmap - overrun
PASS: I/O bitmap - ignore unconditional exiting
PASS: I/O bitmap - unconditional exiting
filter = -exit_monitor_from_l2_test, test = instruction intercept

Test suite: instruction intercept
PASS: execute HLT
PASS: intercept HLT
PASS: execute INVLPG
PASS: intercept INVLPG
	Feature required for MWAIT is not supported.
PASS: execute RDPMC
PASS: intercept RDPMC
PASS: execute RDTSC
PASS: intercept RDTSC
PASS: execute CR3 load
PASS: intercept CR3 load
PASS: execute CR3 store
PASS: intercept CR3 store
PASS: execute CR8 load
PASS: intercept CR8 load
PASS: execute CR8 store
PASS: intercept CR8 store
	Feature required for MONITOR is not supported.
PASS: execute PAUSE
PASS: intercept PAUSE
PASS: execute WBINVD
PASS: intercept WBINVD
PASS: execute DESC_TABLE (SGDT)
PASS: intercept DESC_TABLE (SGDT)
PASS: execute DESC_TABLE (LGDT)
PASS: intercept DESC_TABLE (LGDT)
PASS: execute DESC_TABLE (SIDT)
PASS: intercept DESC_TABLE (SIDT)
PASS: execute DESC_TABLE (LIDT)
PASS: intercept DESC_TABLE (LIDT)
PASS: execute DESC_TABLE (SLDT)
PASS: intercept DESC_TABLE (SLDT)
PASS: execute DESC_TABLE (LLDT)
PASS: intercept DESC_TABLE (LLDT)
PASS: execute DESC_TABLE (STR)
PASS: intercept DESC_TABLE (STR)
PASS: execute RDRAND
PASS: intercept RDRAND
PASS: execute RDSEED
PASS: intercept RDSEED
PASS: intercept CPUID
PASS: intercept INVD
filter = -exit_monitor_from_l2_test, test = EPT A/D disabled

Test suite: EPT A/D disabled
EPT - guest level 4 page table is not mapped.
EPT - guest level 4 page table is not mapped.
PASS: EPT basic framework
PASS: EPT misconfigurations
Unhandled cpu exception 14 #PF at ip 0000000000401f9e
PF at 0x401f9e addr 0x439000
error_code=0004      rflags=00010002      cs=00000008
rax=0000000000000003 rcx=0000000000000003 rdx=0000000000006820 rbx=00000000004257c0
rbp=0000000000538230 rsi=0000000007ecb000 rdi=0000000007ecd000
 r8=0000000000000003  r9=0000000007ecb000 r10=000ffffffffff000 r11=0000000000000005
r12=0000000000539b48 r13=000000000000000d r14=0000000000000000 r15=000000000041d078
cr0=0000000080010031 cr2=0000000000439000 cr3=0000000001007000 cr4=0000000000002020
cr8=0000000000000000
	STACK: @401f9e 403c7e 400344
FAIL vmx
