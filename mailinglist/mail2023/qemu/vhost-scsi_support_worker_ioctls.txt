[PATCH v3 0/2] vhost-scsi: Support worker ioctls

... from Mike Christie <michael.christie@oracle.com> ...

https://lore.kernel.org/all/20231204231618.21962-1-michael.christie@oracle.com/

vhost-scsi multi-thread support.


Legacy的方式.

VHOST_SET_OWNER
-> vhost_dev_set_owner()
   -> vhost_worker_create()
   -> for (i = 0; i < dev->nvqs; i++)
        __vhost_vq_attach_worker(dev->vqs[i], worker)

新的multiqueue/worker的方式.

vhost_scsi_ioctl()
-> VHOST_NEW_WORKER
   -> vhost_worker_ioctl()
      -> VHOST_NEW_WORKER
         -> vhost_new_worker()
            -> vhost_worker_create()

vhost_scsi_ioctl()
-> VHOST_ATTACH_VRING_WORKER
   -> vhost_worker_ioctl()
      -> VHOST_ATTACH_VRING_WORKER
         -> vhost_vq_attach_worker()
            -> __vhost_vq_attach_worker()

-------------------------------

[PATCH v3 1/2] vhost: Add worker backend callouts

引入API使用下面的IOCTL.

@@ -313,6 +337,10 @@ const VhostOps kernel_ops = {
         .vhost_set_vring_err = vhost_kernel_set_vring_err,
         .vhost_set_vring_busyloop_timeout =
                                 vhost_kernel_set_vring_busyloop_timeout,
+        .vhost_get_vring_worker = vhost_kernel_get_vring_worker,        ---> VHOST_GET_VRING_WORKER
+        .vhost_attach_vring_worker = vhost_kernel_attach_vring_worker,  ---> VHOST_ATTACH_VRING_WORKER
+        .vhost_new_worker = vhost_kernel_new_worker,           ---> VHOST_NEW_WORKER
+        .vhost_free_worker = vhost_kernel_free_worker,         ---> VHOST_FREE_WORKER
         .vhost_set_features = vhost_kernel_set_features,
         .vhost_get_features = vhost_kernel_get_features,
         .vhost_set_backend_cap = vhost_kernel_set_backend_cap,

-------------------------------

[PATCH v3 2/2] vhost-scsi: Add support for a worker thread per virtqueue

在vhost_scsi_realize()先用vhost_scsi_set_workers()使用新的per-thread的API.
如果不行退出来继续在vhost_scsi_realize()用legacy.

@@ -232,6 +285,13 @@ static void vhost_scsi_realize(DeviceState *dev, Error **errp)
         goto free_vqs;
     }

+    ret = vhost_scsi_set_workers(vsc, vs->conf.worker_per_virtqueue);
+    if (ret < 0) {
+        error_setg(errp, "vhost-scsi: vhost worker setup failed: %s",
+                   strerror(-ret));
+        goto free_vqs;
+    }
+
     /* At present, channel and lun both are 0 for bootable vhost-scsi disk */
     vsc->channel = 0;
     vsc->lun = 0;
