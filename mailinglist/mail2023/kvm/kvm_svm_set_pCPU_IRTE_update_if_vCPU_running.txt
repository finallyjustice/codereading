[PATCH 0/2] KVM: SVM: Set pCPU during IRTE update if vCPU is running

... Sean Christopherson <seanjc@google.com> ...

https://lore.kernel.org/all/20230808233132.2499764-1-seanjc@google.com/

--------------------------

While I do not have knowledge on AMD IOMMU AVIC, it tooks the remapping table
and doorbell target vCPU are seperate data.

On Intel, there is only the remapping table.

The essential is the 2nd patch.

[PATCH 2/2] KVM: SVM: Set target pCPU during IRTE update if target vCPU is running.

@@ -824,6 +825,18 @@ static int svm_ir_list_add(struct vcpu_svm *svm, struct amd_iommu_pi_data *pi)
 	ir->data = pi->ir_data;

 	spin_lock_irqsave(&svm->ir_list_lock, flags);
+
+	/*
+	 * Update the target pCPU for IOMMU doorbells if the vCPU is running.
+	 * If the vCPU is NOT running, i.e. is blocking or scheduled out, KVM
+	 * will update the pCPU info when the vCPU awkened and/or scheduled in.
+	 * See also avic_vcpu_load().
+	 */
+	entry = READ_ONCE(*(svm->avic_physical_id_cache));
+	if (entry & AVIC_PHYSICAL_ID_ENTRY_IS_RUNNING_MASK)
+		amd_iommu_update_ga(entry & AVIC_PHYSICAL_ID_ENTRY_HOST_PHYSICAL_ID_MASK,
+				    true, pi->ir_data);
+
 	list_add(&ir->node, &svm->ir_list);
 	spin_unlock_irqrestore(&svm->ir_list_lock, flags);
 out:
