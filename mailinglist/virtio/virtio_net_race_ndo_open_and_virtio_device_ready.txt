[PATCH net V2] virtio-net: fix race between ndo_open() and virtio_device_ready()

... from Jason Wang <jasowang@redhat.com> ...

https://lore.kernel.org/all/20220627083040.53506-1-jasowang@redhat.com/

核心思想是用rtnl_lock()和rtnl_unlock()来一起保护register_netdevice() + virtio_device_ready().

不然的话可能会有这样的race ...


      CPU X                            CPU Y

err = register_netdevice(dev);
                                     ndo_open()

virtio_device_ready(vdev);


We currently call virtio_device_ready() after netdev
registration. Since ndo_open() can be called immediately
after register_netdev, this means there exists a race between
ndo_open() and virtio_device_ready(): the driver may start to use the
device before DRIVER_OK which violates the spec.

Fix this by switching to use register_netdevice() and protect the
virtio_device_ready() with rtnl_lock() to make sure ndo_open() can
only be called after virtio_device_ready().

Fixes: 4baf1e33d0842 ("virtio_net: enable VQs early")
Acked-by: Michael S. Tsirkin <mst@redhat.com>
Signed-off-by: Jason Wang <jasowang@redhat.com>
