[PATCH] KVM: x86: Reduce refcount if single_open() fails in kvm_mmu_rmaps_stat_open()

... from Hou Wenlong <houwenlong.hwl@antgroup.com> ...

https://lore.kernel.org/all/a75900413bb8b1e556be690e9588a0f92e946a30.1665733883.git.houwenlong.hwl@antgroup.com/

At line 162, the refcount is increased.

However, the refcount is not reset if line 165 is failed. As a result, the VM
is not able to be destroyed.

158 static int kvm_mmu_rmaps_stat_open(struct inode *inode, struct file *file)
159 {
160         struct kvm *kvm = inode->i_private;
161
162         if (!kvm_get_kvm_safe(kvm))
163                 return -ENOENT;
164
165         return single_open(file, kvm_mmu_rmaps_stat_show, kvm);
166 }

The bugfix is to put the refcount if line 165 is failed.

diff --git a/arch/x86/kvm/debugfs.c b/arch/x86/kvm/debugfs.c
index cfed36aba2f7..412ed1b341fa 100644
--- a/arch/x86/kvm/debugfs.c
+++ b/arch/x86/kvm/debugfs.c
@@ -162,7 +162,12 @@ static int kvm_mmu_rmaps_stat_open(struct inode *inode, struct file *file)
 	if (!kvm_get_kvm_safe(kvm))
 		return -ENOENT;

-	return single_open(file, kvm_mmu_rmaps_stat_show, kvm);
+	if (single_open(file, kvm_mmu_rmaps_stat_show, kvm)) {
+		kvm_put_kvm(kvm);
+		return -ENOMEM;
+	}
+
+	return 0;
 }
