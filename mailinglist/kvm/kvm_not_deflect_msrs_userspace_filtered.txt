[PATCH 0/3] MSR Filtering updates

... from Aaron Lewis <aaronlewis@google.com> ...

https://lore.kernel.org/all/20220703191636.2159067-1-aaronlewis@google.com/


主要是下面的patch.

[PATCH 3/3] KVM: x86: Don't deflect MSRs to userspace that can't be filtered

If an MSR is not permitted to be filtered and deflected to userspace,
don't then allow it to be deflected to userspace by other means.  If an
MSR that cannot be filtered #GP's, and KVM is configured to send all
MSRs that #GP to userspace, that MSR will be sent to userspace as well.
Prevent that from happening by filtering out disallowed MSRs from being
deflected to userspace.


之前记录过, msr filter主要是两部分:
- Deflect unknown MSR accesses to user space
- Introduce MSR filtering

前者通过KVM_CAP_X86_USER_SPACE_MSR配置vcpu->kvm->arch.user_space_msr_mask,
如果有kernel KVM不支持的msr access, 以前是GP, 现在是先看一下vcpu->kvm->arch.user_space_msr_mask,
如果userspace愿意处理, 就返回userspace处理.

前者可以在userspace处理一些msr.但是对于那些kvm kernel处理了的却没有办法.
于是后者引入filter, 来主动告诉kvm kernel去主动fail一些msr.
这样被fail的msr再根据KVM_CAP_X86_USER_SPACE_MSR配置的vcpu->kvm->arch.user_space_msr_mask
判断userspace是否处理.


这个patch我不明白, patch假设"If an MSR that cannot be filtered #GP's, and KVM is configured to send all MSRs that #GP to userspace,"

问题是X2APIC MSRs会被GP吗??

也许吧, 比如下面. 也许需要一个selftest???

2886 static int kvm_lapic_msr_write(struct kvm_lapic *apic, u32 reg, u64 data)
2887 {
2888         /*
2889          * ICR is a 64-bit register in x2APIC mode (and Hyper'v PV vAPIC) and
2890          * can be written as such, all other registers remain accessible only
2891          * through 32-bit reads/writes.
2892          */
2893         if (reg == APIC_ICR)
2894                 return kvm_x2apic_icr_write(apic, data);
2895
2896         return kvm_lapic_reg_write(apic, reg, (u32)data);
2897 }
2898
2899 int kvm_x2apic_msr_write(struct kvm_vcpu *vcpu, u32 msr, u64 data)
2900 {
2901         struct kvm_lapic *apic = vcpu->arch.apic;
2902         u32 reg = (msr - APIC_BASE_MSR) << 4;
2903
2904         if (!lapic_in_kernel(vcpu) || !apic_x2apic_mode(apic))
2905                 return 1;
2906
2907         return kvm_lapic_msr_write(apic, reg, data);
2908 }
