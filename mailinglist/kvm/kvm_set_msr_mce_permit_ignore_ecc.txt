[PATCH] KVM: set_msr_mce: Permit guests to ignore single-bit ECC errors

... from Lev Kujawski <lkujaw@member.fsf.org> ...

https://lore.kernel.org/all/20220521081511.187388-1-lkujaw@member.fsf.org/

对于correctable的一些error, kvm错误的返回了-1.

试着在kvm_set_msr随机返回了-1, 可以得到一样的userspace error. 信息量太少,最好在kvm_run里加一些data.否则要靠disassemble code,

error: kvm run failed Operation not permitted
RAX=0000000007213cc9 RBX=ffff9f30ffcd5fc0 RCX=0000000000000838 RDX=0000000000000000
RSI=0000000007213cc9 RDI=0000000000000838 RBP=ffff9f30ffcc3f18 RSP=ffff9f30ffcc3f10
R8 =0000000096ecb9b4 R9 =0000000000000005 R10=0000000000000000 R11=0000000000000020
R12=000000007213bf6e R13=0000000000000000 R14=ffff9f30ffcdd0a8 R15=ffff9f30ffcdd0e8
RIP=ffffffff96070964 RFL=00000046 [---Z-P-] CPL=0 II=0 A20=1 SMM=0 HLT=0
ES =0000 0000000000000000 ffffffff 00c00000
CS =0010 0000000000000000 ffffffff 00a09b00 DPL=0 CS64 [-RA]
SS =0018 0000000000000000 ffffffff 00c09300 DPL=0 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 0000000000000000 ffffffff 00c00000
GS =0000 ffff9f30ffcc0000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe0000087000 0000206f 00008b00 DPL=0 TSS64-busy
GDT=     fffffe0000085000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=00007fffeedffbf8 CR3=0000000135db6000 CR4=000006e0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
Code=c3 0f 21 f0 5d c3 0f 0b 0f 1f 84 00 00 00 00 00 89 f9 89 f0 <0f> 30 0f 1f 44 00 00 c3 55 48 c1 e2 20 89 f6 48 09 d6 31 d2 48 89 e5 e8 40 bf 39 00 5d c3

通过online disassembler, <0f>是wrmsr.

0:  c3                      ret
1:  0f 21 f0                mov    eax,db6
4:  5d                      pop    ebp
5:  c3                      ret
6:  0f 0b                   ud2
8:  0f 1f 84 00 00 00 00    nop    DWORD PTR [eax+eax*1+0x0]
f:  00
10: 89 f9                   mov    ecx,edi
12: 89 f0                   mov    eax,esi
14: 0f 30                   wrmsr
16: 0f 1f 44 00 00          nop    DWORD PTR [eax+eax*1+0x0]
1b: c3                      ret
1c: 55                      push   ebp
1d: 48                      dec    eax
1e: c1 e2 20                shl    edx,0x20
21: 89 f6                   mov    esi,esi
23: 48                      dec    eax
24: 09 d6                   or     esi,edx
26: 31 d2                   xor    edx,edx
28: 48                      dec    eax
29: 89 e5                   mov    ebp,esp
2b: e8 40 bf 39 00          call   0x39bf70
30: 5d                      pop    ebp
31: c3                      ret
