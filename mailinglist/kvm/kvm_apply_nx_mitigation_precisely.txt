[PATCH v2 0/6] KVM: x86: Apply NX mitigation more precisely

... from Sean Christopherson <seanjc@google.com> ...

https://lore.kernel.org/all/20220723012325.1715714-1-seanjc@google.com/

核心目的是为了把合法的small page合并成huge page.

KVM代码错误的假设NX huge page mitigation是唯一的不创建huge page entry(而产生small entry)的原因.

核心思想是下面的代码. 只有explicitly说了不支持huge page, 才真的不支持.

@@ -3092,6 +3092,19 @@ void disallowed_hugepage_adjust(struct kvm_page_fault *fault, u64 spte, int cur_
 	    cur_level == fault->goal_level &&
 	    is_shadow_present_pte(spte) &&
 	    !is_large_pte(spte)) {
+		u64 page_mask;
+
+		/*
+		 * Ensure nx_huge_page_disallowed is read after checking for a
+		 * present shadow page.  A different vCPU may be concurrently
+		 * installing the shadow page if mmu_lock is held for read.
+		 * Pairs with the smp_wmb() in kvm_tdp_mmu_map().
+		 */
+		smp_rmb();
+
+		if (!spte_to_sp(spte)->nx_huge_page_disallowed)
+			return;
+
 		/*
 		 * A small SPTE exists for this pfn, but FNAME(fetch)
 		 * and __direct_map would like to create a large PTE


