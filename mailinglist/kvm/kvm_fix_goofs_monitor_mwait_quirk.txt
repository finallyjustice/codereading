[PATCH 0/3] KVM: x86: Fix goofs with MONITOR/MWAIT quirk

... from Sean Christopherson ...

https://lore.kernel.org/kvm/20220711225753.1073989-1-seanjc@google.com/

前面两个patch是修改selftest, 第三个patch是给kernel的.

[PATCH 3/3] KVM: x86: Tweak name of MONITOR/MWAIT #UD quirk to make it #UD specific

就是修改了名字加了UD:

@@ -2097,6 +2097,6 @@ int memslot_rmap_alloc(struct kvm_memory_slot *slot, unsigned long npages);
 	 KVM_X86_QUIRK_OUT_7E_INC_RIP |		\
 	 KVM_X86_QUIRK_MISC_ENABLE_NO_MWAIT |	\
 	 KVM_X86_QUIRK_FIX_HYPERCALL_INSN |	\
-	 KVM_X86_QUIRK_MWAIT_NEVER_FAULTS)
+	 KVM_X86_QUIRK_MWAIT_NEVER_UD_FAULTS)

-----------------------------

之前下面的patch引入quirk, 如果没有设置KVM_X86_QUIRK_MWAIT_NEVER_FAULTS, 在不支持monitor/mwait的时候就会插入UD.

[PATCH 0/5] KVM: x86: Quirk "MWAIT never faults" behavior
https://lore.kernel.org/all/20220608224516.3788274-1-seanjc@google.com/


核心思想是很多VM的操作系统不看cpuid是否支持就使用MONITOR/MWAIT.
patch之前对于mwait和monitor就是emulate nop.

patch之后就 ...

By default, KVM emulates MONITOR/MWAIT (if they are intercepted) as NOPs
regardless of whether or not MONITOR/MWAIT are supported according to guest
CPUID.  When this quirk is disabled and KVM_X86_DISABLE_EXITS_MWAIT is not set
(MONITOR/MWAIT are intercepted), KVM will inject a #UD on MONITOR/MWAIT if
they're unsupported per guest CPUID. Note, KVM will modify MONITOR/MWAIT
support in guest CPUID on writes to MISC_ENABLE if
KVM_X86_QUIRK_MISC_ENABLE_NO_MWAIT is disabled.


注意是下面的控制是否trap mwait和monitor.

CPU_BASED_MWAIT_EXITING
CPU_BASED_MONITOR_EXITING

-----------------------------

这个patch把KVM_X86_QUIRK_MWAIT_NEVER_FAULTS的名字上加"UD", 就是为了make it clear.

Add a "UD" clause to KVM_X86_QUIRK_MWAIT_NEVER_FAULTS to make it clear
that the quirk only controls the #UD behavior of MONITOR/MWAIT.  KVM
doesn't currently enforce fault checks when MONITOR/MWAIT are supported,
but that could change in the future.  SVM also has a virtualization hole
in that it checks all faults before intercepts, and so "never faults" is
already a lie when running on SVM.

