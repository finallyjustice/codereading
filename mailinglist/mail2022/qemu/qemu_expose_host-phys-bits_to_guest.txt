[PATCH v2 0/2] expose host-phys-bits to guest

... from Gerd Hoffmann <kraxel@redhat.com> ...

https://lore.kernel.org/all/20220908113109.470792-1-kraxel@redhat.com/

As mentioned in below rhbz ...

https://bugzilla.redhat.com/show_bug.cgi?id=2084533

... qemu has a switch (-cpu ${name},host-phys-bits={on,off}).

When enabled (downstream default, also forced for microvm machine type
upstream) standard cpuid query returns a physical address space size which is
guaranteed to work (matches host by default, can be smaller, can not me
larger).

When disabled (upstream default for q35 and pc) standard cpuid query returns
whatever is configured (40 by default), even if the host supports less than
that.

The problem the firmware has is that it can't trust the standard cpuid to
return a usable value so the physical address space is not known.  Today the
firmware tries to handle that by being conservative and not exceed the minimum
size (phys-bits=36 aka 64G), which becomes increasingly problematic.

Therefore, this patchset is to introduce a new channel so that QEMU can tell VM
whether to trust the host bits in cpuid.

@@ -68,7 +70,8 @@ static uint32_t host_cpu_adjust_phys_bits(X86CPU *cpu)
         warned = true;
     }
 
-    if (cpu->host_phys_bits) {
+    if (cpu->env.features[FEAT_KVM_HINTS] &
+        (1 << KVM_HINTS_PHYS_ADDRESS_SIZE_DATA_VALID)) {
         /* The user asked for us to use the host physical bits */
         phys_bits = host_phys_bits;
         if (cpu->host_phys_bits_limit &&
