[PATCH] KVM: x86: Un-inhibit APICv/AVIC when switching to x2APIC mode

... from Suravee Suthikulpanit <suravee.suthikulpanit@amd.com> ...

https://lore.kernel.org/all/20220909195442.7660-1-suravee.suthikulpanit@amd.com/

This patch is to fix a case that apicv is erroneously disabled.

Suppose the cpu is in xapic and the xapic id is set at line 2103 and 2104.

2094 static int kvm_lapic_reg_write(struct kvm_lapic *apic, u32 reg, u32 val)
2095 {
2096         int ret = 0;
2097
2098         trace_kvm_apic_write(reg, val);
2099
2100         switch (reg) {
2101         case APIC_ID:           /* Local APIC ID */
2102                 if (!apic_x2apic_mode(apic)) {
2103                         kvm_apic_set_xapic_id(apic, val >> 24);
2104                         kvm_lapic_xapic_id_updated(apic);
2105                 } else {
2106                         ret = 1;
2107                 }
2108                 break;


Currently, kvm_lapic_xapic_id_updated() checks if the xAPIC ID in
the APIC_ID register differs from the vcpu ID. If so it inhibits
APICv/AVIC at line 2081.

2071 static void kvm_lapic_xapic_id_updated(struct kvm_lapic *apic)
2072 {
2073         struct kvm *kvm = apic->vcpu->kvm;
2074
2075         if (KVM_BUG_ON(apic_x2apic_mode(apic), kvm))
2076                 return;
2077
2078         if (kvm_xapic_id(apic) == apic->vcpu->vcpu_id)
2079                 return;
2080
2081         kvm_set_apicv_inhibit(apic->vcpu->kvm, APICV_INHIBIT_REASON_APIC_ID_MODIFIED);
2082 }

However, for vcpu 256 and above, the 8-bit xAPIC ID field in the APIC_ID
register cannot support 32-bit x2APIC ID causing the kvm_xapic_id()
to return invalid ID and fail the comparison with the vcpu ID.
This causes APICv/AVIC inhibition for VM with more than 256 vcpus
due to APIVC_INHIBIT_REASON_APIC_ID_MODIFIED.

In this case, when guest switch to x2APIC mode, KVM needs to clear
APIVC_INHIBIT_REASON_APIC_ID_MODIFIED.
