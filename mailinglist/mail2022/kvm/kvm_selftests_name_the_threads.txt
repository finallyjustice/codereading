[PATCH v1] KVM: selftests: name the threads

... from Wei Wang <wei.w.wang@intel.com> ...

https://lore.kernel.org/all/20221017162448.257173-1-wei.w.wang@intel.com/

The kvm selftests creates threads without a name. This make debugging
difficult.

This patch introduces two functions.

1. pthread_create_with_name() is used to create
general threads with user specified name.

+
+/*
+ * Create a named thread
+ *
+ * Input Args:
+ *   attr - the attributes for the new thread
+ *   start_routine - the routine to run in the thread context
+ *   arg - the argument passed to start_routine
+ *   name - the name of the thread
+ *
+ * Output Args:
+ *   thread - the thread to be created
+ *
+ * Create a thread with user specified name.
+ */
+void pthread_create_with_name(pthread_t *thread, const pthread_attr_t *attr,
+			void *(*start_routine)(void *), void *arg, char *name)
+{
+	int r;
+
+	r = pthread_create(thread, attr, start_routine, arg);
+	TEST_ASSERT(!r, "thread(%s) creation failed, r = %d", name, r);
+	pthread_setname_np(*thread, name);
+}


2. kvm_vcpu_thread_create() is used to create vcpu threads with name in
"vcpu##id" format.

+/*
+ * Create a vcpu thread
+ *
+ * Input Args:
+ *   attr - the attributes for the new thread
+ *   start_routine - the routine to run in the thread context
+ *   arg - the argument passed to start_routine
+ *   vcpu_id - the id of the vcpu
+ *
+ * Output Args:
+ *   thread - the thread to be created
+ *
+ * Create a vcpu thread with the name in "vcpu##id" format.
+ */
+void kvm_create_vcpu_thread(pthread_t *thread, const pthread_attr_t *attr,
+			void *(*start_routine)(void *), void *arg, int vcpu_id)
+{
+	char vcpu_name[6];
+
+	sprintf(vcpu_name, "%s%d", "vcpu", vcpu_id);
+	pthread_create_with_name(thread, attr, start_routine, arg, vcpu_name);
+}
