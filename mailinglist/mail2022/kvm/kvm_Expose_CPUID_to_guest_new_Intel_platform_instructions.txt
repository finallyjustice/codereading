[PATCH 0/6] x86: KVM: Expose CPUID to guest for new Intel platform instructions

... from Jiaxi Chen <jiaxi.chen@linux.intel.com> ...

https://lore.kernel.org/all/20221019084734.3590760-1-jiaxi.chen@linux.intel.com/

This patchset is to add below to KVM cpuid support.

Latest Intel platform Granite Rapids/Sierra Forest has introduced below new
instructions and CPUIDs:

- CMPccXADD CPUID.(EAX=7,ECX=1):EAX[bit 7]
- AMX-FP16 CPUID.(EAX=7,ECX=1):EAX[bit 21]
- AVX-IFMA CPUID.(EAX=7,ECX=1):EAX[bit 23]
- AVX-VNNI-INT8 CPUID.(EAX=7,ECX=1):EDX[bit 4]
- AVX-NE-CONVERT CPUID.(EAX=7,ECX=1):EDX[bit 5]
- PREFETCHITI CPUID.(EAX=7,ECX=1):EDX[bit 14]

EAX=7, ECX=1 is:

# cpuid -1 -l 0x7 -s 0x1

and check EAX[bit 7]


For example, there is below KVM code.

559 void kvm_set_cpu_caps(void)
... ...
606         kvm_cpu_cap_mask(CPUID_7_0_EBX,
607                 F(FSGSBASE) | F(SGX) | F(BMI1) | F(HLE) | F(AVX2) |
608                 F(FDP_EXCPTN_ONLY) | F(SMEP) | F(BMI2) | F(ERMS) | F(INVPCID) |
609                 F(RTM) | F(ZERO_FCS_FDS) | 0 /*MPX*/ | F(AVX512F) |
610                 F(AVX512DQ) | F(RDSEED) | F(ADX) | F(SMAP) | F(AVX512IFMA) |
611                 F(CLFLUSHOPT) | F(CLWB) | 0 /*INTEL_PT*/ | F(AVX512PF) |
612                 F(AVX512ER) | F(AVX512CD) | F(SHA_NI) | F(AVX512BW) |
613                 F(AVX512VL));


For CPUID_7_0_EBX, we have:

$ cpuid -1 -l 0x7 -s 0x0 
CPU:
      FSGSBASE instructions                    = true
      IA32_TSC_ADJUST MSR supported            = true
      SGX: Software Guard Extensions supported = false
      BMI1 instructions                        = true
      HLE hardware lock elision                = true
      AVX2: advanced vector extensions 2       = true
      FDP_EXCPTN_ONLY                          = false
      SMEP supervisor mode exec protection     = true
      BMI2 instructions                        = true
      enhanced REP MOVSB/STOSB                 = true
      INVPCID instruction                      = true
      RTM: restricted transactional memory     = true
      RDT-CMT/PQoS cache monitoring            = false
      deprecated FPU CS/DS                     = false
      MPX: intel memory protection extensions  = false
      RDT-CAT/PQE cache allocation             = false
      AVX512F: AVX-512 foundation instructions = false
... ...

$ cpuid -1 -l 0x7 -s 0x0 -r
CPU:
   0x00000007 0x00: eax=0x00000000 ebx=0x001c0fbb ecx=0x00000004 edx=0xac000400

------------------------

[PATCH 1/6] x86: KVM: Enable CMPccXADD CPUID and expose it to guest

CPUID.(EAX=7,ECX=1):EAX[bit 7]

diff --git a/arch/x86/include/asm/cpufeatures.h b/arch/x86/include/asm/cpufeatures.h
index ef4775c6db01..445626cb5779 100644
--- a/arch/x86/include/asm/cpufeatures.h
+++ b/arch/x86/include/asm/cpufeatures.h
@@ -308,6 +308,7 @@
 /* Intel-defined CPU features, CPUID level 0x00000007:1 (EAX), word 12 */
 #define X86_FEATURE_AVX_VNNI		(12*32+ 4) /* AVX VNNI instructions */
 #define X86_FEATURE_AVX512_BF16		(12*32+ 5) /* AVX512 BFLOAT16 instructions */
+#define X86_FEATURE_CMPCCXADD           (12*32+ 7) /* CMPccXADD instructions */
 
 /* AMD-defined CPU features, CPUID level 0x80000008 (EBX), word 13 */
 #define X86_FEATURE_CLZERO		(13*32+ 0) /* CLZERO instruction */
diff --git a/arch/x86/kvm/cpuid.c b/arch/x86/kvm/cpuid.c
index 7065462378e2..3f745f6fdc43 100644
--- a/arch/x86/kvm/cpuid.c
+++ b/arch/x86/kvm/cpuid.c
@@ -657,7 +657,7 @@ void kvm_set_cpu_caps(void)
 		kvm_cpu_cap_set(X86_FEATURE_SPEC_CTRL_SSBD);
 
 	kvm_cpu_cap_mask(CPUID_7_1_EAX,
-		F(AVX_VNNI) | F(AVX512_BF16)
+		F(AVX_VNNI) | F(AVX512_BF16) | F(CMPCCXADD)
 	);
 
 	kvm_cpu_cap_mask(CPUID_D_1_EAX,


cpuid -1 -l 0x7 -s 0x1
CPU:
      AVX-VNNI: AVX VNNI neural network instrs = false
      AVX512_BF16: bfloat16 instructions       = false
      zero-length MOVSB                        = false
      fast short STOSB                         = false
      fast short CMPSB, SCASB                  = false
      HRESET: history reset support            = false
      AMX tile support                         = false
      LAM: linear address masking              = false
