[PATCH v2 00/10] KVM: x86/mmu: Make tdp_mmu read-only and clean up TPD MMU fault handler

... from David Matlack <dmatlack@google.com> ...

https://lore.kernel.org/all/20220826231227.4096391-1-dmatlack@google.com/

This patchset primarily consists of two parts.

--------------------------------

Part 1: changes the tdp_mmu module parameter to read-only so that the TDP MMU
can be tracked in a global variable instead of per-VM state.

[PATCH v2 01/10] KVM: x86/mmu: Change tdp_mmu to a read-only parameter

+bool __read_mostly tdp_mmu_allowed;
+
+#ifdef CONFIG_X86_64
+bool __read_mostly tdp_mmu_enabled = true;
+module_param_named(tdp_mmu, tdp_mmu_enabled, bool, 0444);
+#else
+/* TDP MMU is not supported on 32-bit KVM. */
+const bool tdp_mmu_enabled;
+#endif

-static bool __read_mostly tdp_mmu_enabled = true;
-module_param_named(tdp_mmu, tdp_mmu_enabled, bool, 0644);

Therefore, the tdp_mmu_enabled will be the global default config.

--------------------------------

Part 2: splits out a separate page fault handler for the TDP MMU and makes some
clean ups along the way.

[PATCH v2 08/10] KVM: x86/mmu: Split out TDP MMU page fault handling

Currently the direct_page_fault() may go to either kvm_tdp_mmu_map() or
__direct_map().

This patch makes tdp mmu an extra handler. This creates some duplicate code,
but makes the TDP MMU fault handler simpler to read by eliminating branches and
will enable future cleanups by allowing the TDP MMU and non-TDP MMU fault paths
to diverge.


 int kvm_tdp_page_fault(struct kvm_vcpu *vcpu, struct kvm_page_fault *fault)
 {
 	/*
@@ -4355,6 +4384,11 @@ int kvm_tdp_page_fault(struct kvm_vcpu *vcpu, struct kvm_page_fault *fault)
 		}
 	}

+#ifdef CONFIG_X86_64
+	if (tdp_mmu_enabled)
+		return kvm_tdp_mmu_page_fault(vcpu, fault);
+#endif
+
 	return direct_page_fault(vcpu, fault);
 }
