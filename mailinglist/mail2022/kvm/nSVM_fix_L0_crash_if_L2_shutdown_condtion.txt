[PATCH 0/4] nSVM: fix L0 crash if L2 has shutdown condtion which L1 doesn't intercept

... from Maxim Levitsky <mlevitsk@redhat.com> ...

https://lore.kernel.org/all/20221020093055.224317-1-mlevitsk@redhat.com/

This patchset was originally proposed to fix some unit tests bug (1-2). But
later more CVE can be observed.

A flaw was found in the KVM's AMD nested virtualization (SVM). A malicious L1
guest could purposely fail to intercept the shutdown of a cooperative nested
guest (L2), possibly leading to a page fault and kernel panic in the host (L0).


diff --git a/arch/x86/kvm/x86.c b/arch/x86/kvm/x86.c
index d86a8aae1471d3..313c4a6dc65e45 100644
--- a/arch/x86/kvm/x86.c
+++ b/arch/x86/kvm/x86.c
@@ -11931,6 +11931,7 @@ void kvm_vcpu_reset(struct kvm_vcpu *vcpu, bool init_event)
 	WARN_ON_ONCE(!init_event &&
 		     (old_cr0 || kvm_read_cr3(vcpu) || kvm_read_cr4(vcpu)));

+	kvm_leave_nested(vcpu);
 	kvm_lapic_reset(vcpu, init_event);

 	vcpu->arch.hflags = 0;
