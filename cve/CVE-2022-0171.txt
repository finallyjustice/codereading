CVE-2022-0171

The attacher is at KVM userspace with capability to create/destroy SEV VMs. The
existing KVM SEV API has a vulnerability that allows a non-root (host)
user-level application to crash the host kernel by creating a confidential
guest VM instance in AMD CPU that supports Secure Encrypted Virtualization
(SEV).

Flush the CPU caches when memory is reclaimed from an SEV guest (where
reclaim also includes it being unmapped from KVM's memslots).  Due to lack
of coherency for SEV encrypted memory, failure to flush results in silent
data corruption if userspace is malicious/broken and doesn't ensure SEV
guest memory is properly pinned and unpinned.

Cache coherency is not enforced across the VM boundary in SEV (AMD APM
vol.2 Section 15.34.7). Confidential cachelines, generated by confidential
VM guests have to be explicitly flushed on the host side. If a memory page
containing dirty confidential cachelines was released by VM and reallocated
to another user, the cachelines may corrupt the new user at a later time.

KVM takes a shortcut by assuming all confidential memory remain pinned
until the end of VM lifetime. Therefore, KVM does not flush cache at
mmu_notifier invalidation events. Because of this incorrect assumption and
the lack of cache flushing, malicous userspace can crash the host kernel:
creating a malicious VM and continuously allocates/releases unpinned
confidential memory pages when the VM is running.

The below is from the AMD manual.

15.34.7. Restrictions.

As with SME, some hardware implementations may not enforce coherency between
mappings of the same physical page with different encryption enablement or
keys. In such a system, when the encryption enablement or key for a particular
memory page is to be changed, software must first ensure the page is flushed
from all CPU caches. Certain conventional cache flushing techniques may not
work however; see Section 15.34.9 for further details.

Note that if the hardware implementation enforces coherency across encryption
domains as indicated by CPUID Fn8000_001F_EAX[10] then this flush is not
required.


15.34.9 Page Flush MSR

If coherency across encryption domains is not supported (see “Restrictions” on
page 575), and the hypervisor wishes to read an encrypted page, it must first
flush the guest view of that page from all CPU caches to ensure it is able to
view the most recent copy of that data. This may be accomplished by issuing a
WBINVD instruction on all cores on which the guest has run, or by using the
VMPAGE_FLUSH MSR (C001_011E). Support for the VMPAGE_FLUSH MSR is indicated in
CPUID 8000_001F[EAX] bit 2.



The fix is below patch.

KVM: SEV: add cache flush to solve SEV cache incoherency issues
https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=683412ccf61294d727ead4a73d97397396e69a6b
