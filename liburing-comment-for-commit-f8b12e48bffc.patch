From 5019a2a7869f2ddaa7fa5139d0f194ec7c3010ae Mon Sep 17 00:00:00 2001
From: Dongli Zhang <dongli.zhang0129@gmail.com>
Date: Wed, 3 Apr 2019 01:50:33 +0800
Subject: [PATCH 1/1] liburing comment for commit f8b12e48bffc

This is for liburing commit f8b12e48bffc

Signed-off-by: Dongli Zhang <dongli.zhang0129@gmail.com>
---
 src/liburing.h       | 11 +++++++++++
 src/queue.c          |  3 +++
 src/setup.c          |  6 ++++++
 test/io_uring-cp.c   |  6 ++++++
 test/io_uring-test.c | 12 ++++++++++++
 5 files changed, 38 insertions(+)

diff --git a/src/liburing.h b/src/liburing.h
index 1cea6a5..2b87992 100644
--- a/src/liburing.h
+++ b/src/liburing.h
@@ -13,6 +13,13 @@ struct io_uring_sq {
 	unsigned *khead;
 	unsigned *ktail;
 	unsigned *kring_mask;
+	/*
+	 * used by:
+	 *   - src/queue.c|93| <<io_uring_submit>> submitted = *sq->kring_entries;
+	 *   - src/queue.c|160| <<io_uring_get_sqe>> if (next - sq->sqe_head > *sq->kring_entries)
+	 *   - src/setup.c|27| <<io_uring_mmap>> sq->kring_entries = ptr + p->sq_off.ring_entries;
+	 *   - src/setup.c|107| <<io_uring_queue_exit>> munmap(sq->sqes, *sq->kring_entries * sizeof(struct io_uring_sqe));
+	 */
 	unsigned *kring_entries;
 	unsigned *kflags;
 	unsigned *kdropped;
@@ -29,6 +36,10 @@ struct io_uring_cq {
 	unsigned *khead;
 	unsigned *ktail;
 	unsigned *kring_mask;
+	/*
+	 * used by:
+	 *   - src/setup.c|54| <<io_uring_mmap>> cq->kring_entries = ptr + p->cq_off.ring_entries;
+	 */
 	unsigned *kring_entries;
 	unsigned *koverflow;
 	struct io_uring_cqe *cqes;
diff --git a/src/queue.c b/src/queue.c
index 6767790..660aea8 100644
--- a/src/queue.c
+++ b/src/queue.c
@@ -148,6 +148,9 @@ submit:
  *
  * Returns a vacant sqe, or NULL if we're full.
  */
+/*
+ * 获取下一个sqe, sq->sqe_tail会增加1
+ */
 struct io_uring_sqe *io_uring_get_sqe(struct io_uring *ring)
 {
 	struct io_uring_sq *sq = &ring->sq;
diff --git a/src/setup.c b/src/setup.c
index 9979dd0..2a8d750 100644
--- a/src/setup.c
+++ b/src/setup.c
@@ -93,6 +93,12 @@ int io_uring_queue_init(unsigned entries, struct io_uring *ring, unsigned flags)
 	return io_uring_queue_mmap(fd, &p, ring);
 }
 
+/*
+ * munmap以下3个:
+ *   - sq->sqes
+ *   - sq->khead
+ *   - cq->khead
+ */
 void io_uring_queue_exit(struct io_uring *ring)
 {
 	struct io_uring_sq *sq = &ring->sq;
diff --git a/test/io_uring-cp.c b/test/io_uring-cp.c
index 3790736..4b511c2 100644
--- a/test/io_uring-cp.c
+++ b/test/io_uring-cp.c
@@ -241,6 +241,12 @@ int main(int argc, char *argv[])
 
 	close(infd);
 	close(outfd);
+	/*
+	 * munmap以下3个:
+	 *   - sq->sqes
+	 *   - sq->khead
+	 *   - cq->khead
+	 */
 	io_uring_queue_exit(&ring);
 	return ret;
 }
diff --git a/test/io_uring-test.c b/test/io_uring-test.c
index caca379..d49da43 100644
--- a/test/io_uring-test.c
+++ b/test/io_uring-test.c
@@ -42,6 +42,7 @@ int main(int argc, char *argv[])
 
 	iovecs = calloc(QD, sizeof(struct iovec));
 	for (i = 0; i < QD; i++) {
+		/* Allocate memory of SIZE bytes with an alignment of ALIGNMENT. */
 		if (posix_memalign(&buf, 4096, 4096))
 			return 1;
 		iovecs[i].iov_base = buf;
@@ -51,6 +52,11 @@ int main(int argc, char *argv[])
 	offset = 0;
 	i = 0;
 	do {
+		/*
+		 * sqe类型: struct io_uring_sqe *sqe;
+		 *
+		 * 获取下一个sqe, sq->sqe_tail会增加1
+		 */
 		sqe = io_uring_get_sqe(&ring);
 		if (!sqe)
 			break;
@@ -82,6 +88,12 @@ int main(int argc, char *argv[])
 
 	printf("Submitted=%d, completed=%d\n", pending, done);
 	close(fd);
+	/*
+	 * munmap以下3个:
+	 *   - sq->sqes
+	 *   - sq->khead
+	 *   - cq->khead
+	 */
 	io_uring_queue_exit(&ring);
 	return 0;
 }
-- 
2.7.4

