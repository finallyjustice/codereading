From 5ab5d32b049cc348bb2e6e2a1321094d3cff909a Mon Sep 17 00:00:00 2001
From: Dongli Zhang <dongli.zhang0129@gmail.com>
Date: Thu, 12 Sep 2019 05:45:40 +0800
Subject: [PATCH 1/1] rds rdma ib and rxe for linux-5.2

Signed-off-by: Dongli Zhang <dongli.zhang0129@gmail.com>
---
 drivers/infiniband/sw/rxe/rxe.c       | 23 +++++++++++++++++++++++
 drivers/infiniband/sw/rxe/rxe_loc.h   |  8 ++++++++
 drivers/infiniband/sw/rxe/rxe_net.c   | 17 +++++++++++++++++
 drivers/infiniband/sw/rxe/rxe_recv.c  |  5 +++++
 drivers/infiniband/sw/rxe/rxe_req.c   |  4 ++++
 drivers/infiniband/sw/rxe/rxe_verbs.c | 11 +++++++++++
 include/rdma/ib_verbs.h               |  5 +++++
 include/rdma/rdma_netlink.h           |  4 ++++
 net/rds/ib.c                          |  4 ++++
 net/rds/transport.c                   |  5 +++++
 10 files changed, 86 insertions(+)

diff --git a/drivers/infiniband/sw/rxe/rxe.c b/drivers/infiniband/sw/rxe/rxe.c
index a8c11b5..6161ed8 100644
--- a/drivers/infiniband/sw/rxe/rxe.c
+++ b/drivers/infiniband/sw/rxe/rxe.c
@@ -41,6 +41,11 @@ MODULE_DESCRIPTION("Soft RDMA transport");
 MODULE_LICENSE("Dual BSD/GPL");
 
 /* free resources for all ports on a device */
+/*
+ * called by:
+ *   - drivers/infiniband/sw/rxe/rxe.c|69| <<rxe_dealloc>> rxe_cleanup_ports(rxe);
+ *   - drivers/infiniband/sw/rxe/rxe.c|283| <<rxe_init>> rxe_cleanup_ports(rxe);
+ */
 static void rxe_cleanup_ports(struct rxe_dev *rxe)
 {
 	kfree(rxe->port.pkey_tbl);
@@ -151,6 +156,10 @@ static int rxe_init_port_param(struct rxe_port *port)
 /* initialize port state, note IB convention that HCA ports are always
  * numbered from 1
  */
+/*
+ * called by:
+ *   - drivers/infiniband/sw/rxe/rxe.c|265| <<rxe_init>> err = rxe_init_ports(rxe);
+ */
 static int rxe_init_ports(struct rxe_dev *rxe)
 {
 	struct rxe_port *port = &rxe->port;
@@ -255,6 +264,10 @@ static int rxe_init_pools(struct rxe_dev *rxe)
 }
 
 /* initialize rxe device state */
+/*
+ * called by:
+ *   - drivers/infiniband/sw/rxe/rxe.c|309| <<rxe_add>> err = rxe_init(rxe);
+ */
 static int rxe_init(struct rxe_dev *rxe)
 {
 	int err;
@@ -302,6 +315,10 @@ void rxe_set_mtu(struct rxe_dev *rxe, unsigned int ndev_mtu)
 /* called by ifc layer to create new rxe device.
  * The caller should allocate memory for rxe by calling ib_alloc_device.
  */
+/*
+ * called by:
+ *   - drivers/infiniband/sw/rxe/rxe_net.c|537| <<rxe_net_add>> err = rxe_add(rxe, ndev->mtu, ibdev_name);
+ */
 int rxe_add(struct rxe_dev *rxe, unsigned int mtu, const char *ibdev_name)
 {
 	int err;
@@ -315,6 +332,12 @@ int rxe_add(struct rxe_dev *rxe, unsigned int mtu, const char *ibdev_name)
 	return rxe_register_device(rxe, ibdev_name);
 }
 
+/*
+ * called by:
+ *   - drivers/infiniband/core/nldev.c|1316| <<nldev_newlink>> err = ops ? ops->newlink(ibdev_name, ndev) : -EINVAL;
+ *
+ * struct rdma_link_ops rxe_link_ops.newlink = rxe_newlink()
+ */
 static int rxe_newlink(const char *ibdev_name, struct net_device *ndev)
 {
 	struct rxe_dev *exists;
diff --git a/drivers/infiniband/sw/rxe/rxe_loc.h b/drivers/infiniband/sw/rxe/rxe_loc.h
index 775c23b..e71130a 100644
--- a/drivers/infiniband/sw/rxe/rxe_loc.h
+++ b/drivers/infiniband/sw/rxe/rxe_loc.h
@@ -247,6 +247,14 @@ static inline unsigned int wr_opcode_mask(int opcode, struct rxe_qp *qp)
 	return rxe_wr_opcode_info[opcode].mask[qp->ibqp.qp_type];
 }
 
+/*
+ * called by:
+ *   - drivers/infiniband/sw/rxe/rxe_req.c|732| <<rxe_requester>> ret = rxe_xmit_packet(qp, &pkt, skb);
+ *   - drivers/infiniband/sw/rxe/rxe_resp.c|737| <<read_reply>> err = rxe_xmit_packet(qp, &ack_pkt, skb);
+ *   - drivers/infiniband/sw/rxe/rxe_resp.c|962| <<send_ack>> err = rxe_xmit_packet(qp, &ack_pkt, skb);
+ *   - drivers/infiniband/sw/rxe/rxe_resp.c|1003| <<send_atomic_ack>> rc = rxe_xmit_packet(qp, &ack_pkt, skb);
+ *   - drivers/infiniband/sw/rxe/rxe_resp.c|1133| <<duplicate_request>> rc = rxe_xmit_packet(qp, pkt, res->atomic.skb);
+ */
 static inline int rxe_xmit_packet(struct rxe_qp *qp, struct rxe_pkt_info *pkt,
 				  struct sk_buff *skb)
 {
diff --git a/drivers/infiniband/sw/rxe/rxe_net.c b/drivers/infiniband/sw/rxe/rxe_net.c
index 5a3474f..5209399 100644
--- a/drivers/infiniband/sw/rxe/rxe_net.c
+++ b/drivers/infiniband/sw/rxe/rxe_net.c
@@ -187,6 +187,10 @@ static struct dst_entry *rxe_find_route(struct net_device *ndev,
 	return dst;
 }
 
+/*
+ * used by:
+ *   - drivers/infiniband/sw/rxe/rxe_net.c|258| <<rxe_setup_udp_tunnel>> tnl_cfg.encap_rcv = rxe_udp_encap_recv;
+ */
 static int rxe_udp_encap_recv(struct sock *sk, struct sk_buff *skb)
 {
 	struct udphdr *udph;
@@ -419,6 +423,10 @@ static void rxe_skb_tx_dtor(struct sk_buff *skb)
 	rxe_drop_ref(qp);
 }
 
+/*
+ * called by:
+ *   - drivers/infiniband/sw/rxe/rxe_loc.h|268| <<rxe_xmit_packet>> err = rxe_send(pkt, skb);
+ */
 int rxe_send(struct rxe_pkt_info *pkt, struct sk_buff *skb)
 {
 	int err;
@@ -523,6 +531,11 @@ enum rdma_link_layer rxe_link_layer(struct rxe_dev *rxe, unsigned int port_num)
 	return IB_LINK_LAYER_ETHERNET;
 }
 
+/*
+ * called by:
+ *   - drivers/infiniband/sw/rxe/rxe.c|331| <<rxe_newlink>> err = rxe_net_add(ibdev_name, ndev);
+ *   - drivers/infiniband/sw/rxe/rxe_sysfs.c|84| <<rxe_param_set_add>> err = rxe_net_add("rxe%d", ndev);
+ */
 int rxe_net_add(const char *ibdev_name, struct net_device *ndev)
 {
 	int err;
@@ -669,6 +682,10 @@ void rxe_net_exit(void)
 	unregister_netdevice_notifier(&rxe_net_notifier);
 }
 
+/*
+ * called by:
+ *   - drivers/infiniband/sw/rxe/rxe.c|356| <<rxe_module_init>> err = rxe_net_init();
+ */
 int rxe_net_init(void)
 {
 	int err;
diff --git a/drivers/infiniband/sw/rxe/rxe_recv.c b/drivers/infiniband/sw/rxe/rxe_recv.c
index f9a492e..dff2ab7 100644
--- a/drivers/infiniband/sw/rxe/rxe_recv.c
+++ b/drivers/infiniband/sw/rxe/rxe_recv.c
@@ -353,6 +353,11 @@ static int rxe_match_dgid(struct rxe_dev *rxe, struct sk_buff *skb)
 }
 
 /* rxe_rcv is called from the interface driver */
+/*
+ * called by:
+ *   - drivers/infiniband/sw/rxe/rxe_net.c|218| <<rxe_udp_encap_recv>> rxe_rcv(skb);
+ *   - drivers/infiniband/sw/rxe/rxe_net.c|454| <<rxe_loopback>> rxe_rcv(skb);
+ */
 void rxe_rcv(struct sk_buff *skb)
 {
 	int err;
diff --git a/drivers/infiniband/sw/rxe/rxe_req.c b/drivers/infiniband/sw/rxe/rxe_req.c
index c5d9b55..8fd7adb 100644
--- a/drivers/infiniband/sw/rxe/rxe_req.c
+++ b/drivers/infiniband/sw/rxe/rxe_req.c
@@ -580,6 +580,10 @@ static void update_state(struct rxe_qp *qp, struct rxe_send_wqe *wqe,
 			  jiffies + qp->qp_timeout_jiffies);
 }
 
+/*
+ * used by:
+ *   - drivers/infiniband/sw/rxe/rxe_qp.c|275| <<rxe_qp_init_req>> rxe_requester, "req");
+ */
 int rxe_requester(void *arg)
 {
 	struct rxe_qp *qp = (struct rxe_qp *)arg;
diff --git a/drivers/infiniband/sw/rxe/rxe_verbs.c b/drivers/infiniband/sw/rxe/rxe_verbs.c
index 8c3e2a1..3520007 100644
--- a/drivers/infiniband/sw/rxe/rxe_verbs.c
+++ b/drivers/infiniband/sw/rxe/rxe_verbs.c
@@ -715,6 +715,13 @@ static int rxe_post_send_kernel(struct rxe_qp *qp, const struct ib_send_wr *wr,
 	return err;
 }
 
+/*
+ * called by:
+ *   - drivers/infiniband/core/uverbs_cmd.c|2171| <<ib_uverbs_post_send>> ret = qp->device->ops.post_send(qp->real_qp, wr, &bad_wr);
+ *   - include/rdma/ib_verbs.h|3727| <<ib_post_send>> return qp->device->ops.post_send(qp, send_wr, bad_send_wr ? : &dummy);
+ *
+ * struct ib_device_ops rxe_dev_ops.post_send = rxe_post_send()
+ */
 static int rxe_post_send(struct ib_qp *ibqp, const struct ib_send_wr *wr,
 			 const struct ib_send_wr **bad_wr)
 {
@@ -1110,6 +1117,10 @@ static int rxe_enable_driver(struct ib_device *ib_dev)
 	return 0;
 }
 
+/*
+ * used by:
+ *   - drivers/infiniband/sw/rxe/rxe_verbs.c|1219| <<rxe_register_device>> ib_set_device_ops(dev, &rxe_dev_ops);
+ */
 static const struct ib_device_ops rxe_dev_ops = {
 	.alloc_hw_stats = rxe_ib_alloc_hw_stats,
 	.alloc_mr = rxe_alloc_mr,
diff --git a/include/rdma/ib_verbs.h b/include/rdma/ib_verbs.h
index 5487308..5fc6b49 100644
--- a/include/rdma/ib_verbs.h
+++ b/include/rdma/ib_verbs.h
@@ -2329,6 +2329,11 @@ struct iw_cm_conn_param;
  * need to define the supported operations, otherwise they will be set to null.
  */
 struct ib_device_ops {
+	/*
+	 * called by:
+	 *   - drivers/infiniband/core/uverbs_cmd.c|2171| <<ib_uverbs_post_send>> ret = qp->device->ops.post_send(qp->real_qp, wr, &bad_wr);
+	 *   - include/rdma/ib_verbs.h|3727| <<ib_post_send>> return qp->device->ops.post_send(qp, send_wr, bad_send_wr ? : &dummy);
+	 */
 	int (*post_send)(struct ib_qp *qp, const struct ib_send_wr *send_wr,
 			 const struct ib_send_wr **bad_send_wr);
 	int (*post_recv)(struct ib_qp *qp, const struct ib_recv_wr *recv_wr,
diff --git a/include/rdma/rdma_netlink.h b/include/rdma/rdma_netlink.h
index 10732ab..00bdf53 100644
--- a/include/rdma/rdma_netlink.h
+++ b/include/rdma/rdma_netlink.h
@@ -103,6 +103,10 @@ bool rdma_nl_chk_listeners(unsigned int group);
 struct rdma_link_ops {
 	struct list_head list;
 	const char *type;
+	/*
+	 * called by:
+	 *   - drivers/infiniband/core/nldev.c|1316| <<nldev_newlink>> err = ops ? ops->newlink(ibdev_name, ndev) : -EINVAL;
+	 */
 	int (*newlink)(const char *ibdev_name, struct net_device *ndev);
 };
 
diff --git a/net/rds/ib.c b/net/rds/ib.c
index b8d581b..9a2706f 100644
--- a/net/rds/ib.c
+++ b/net/rds/ib.c
@@ -553,6 +553,10 @@ struct rds_transport rds_ib_transport = {
 	.t_type			= RDS_TRANS_IB
 };
 
+/*
+ * called by:
+ *   - net/rds/rdma_transport.c|285| <<rds_rdma_init>> ret = rds_ib_init();
+ */
 int rds_ib_init(void)
 {
 	int ret;
diff --git a/net/rds/transport.c b/net/rds/transport.c
index 46f709a..23bb592 100644
--- a/net/rds/transport.c
+++ b/net/rds/transport.c
@@ -41,6 +41,11 @@
 static struct rds_transport *transports[RDS_TRANS_COUNT];
 static DECLARE_RWSEM(rds_trans_sem);
 
+/*
+ * called by:
+ *   - net/rds/ib.c|578| <<rds_ib_init>> rds_trans_register(&rds_ib_transport);
+ *   - net/rds/tcp.c|732| <<rds_tcp_init>> rds_trans_register(&rds_tcp_transport);
+ */
 void rds_trans_register(struct rds_transport *trans)
 {
 	BUG_ON(strlen(trans->t_name) + 1 > TRANSNAMSIZ);
-- 
2.7.4

